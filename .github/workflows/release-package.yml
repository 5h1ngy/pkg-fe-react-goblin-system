name: release-package

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch tags
        run: git fetch --tags --force

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install npm 10
        run: npm install -g npm@10

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run lib:build

      - name: Collect release metadata
        id: release_info
        run: |
          set -euo pipefail
          VERSION=$(node -p "require('./package.json').version")
          TAG="v${VERSION}"
          TARBALL=$(find dist/lib -maxdepth 1 -name '*.tgz' -print -quit)

          if [ -z \"$TARBALL\" ]; then
            echo \"Tarball not found in dist/lib\" >&2
            exit 1
          fi

          echo \"version=$VERSION\" >> \"$GITHUB_OUTPUT\"
          echo \"tag=$TAG\" >> \"$GITHUB_OUTPUT\"
          echo \"tarball=$TARBALL\" >> \"$GITHUB_OUTPUT\"

          if git rev-parse -q --verify \"refs/tags/$TAG\"; then
            echo \"tag_exists=true\" >> \"$GITHUB_OUTPUT\"
          else
            echo \"tag_exists=false\" >> \"$GITHUB_OUTPUT\"
          fi

      - name: Create GitHub release
        id: create_release
        if: steps.release_info.outputs.tag_exists == 'false'
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.release_info.outputs.tag }}
          release_name: pkg-fe-react-goblin-system ${{ steps.release_info.outputs.version }}
          target_commitish: ${{ github.sha }}
          body: |
            Automated release for version ${{ steps.release_info.outputs.version }}.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload package tarball
        if: steps.release_info.outputs.tag_exists == 'false'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.release_info.outputs.tarball }}
          asset_name: pkg-fe-react-goblin-system-${{ steps.release_info.outputs.version }}.tgz
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
