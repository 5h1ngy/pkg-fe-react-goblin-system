import{j as e}from"./jsx-runtime-D_zvdyIk.js";import{r as p}from"./index-CFahbR6w.js";import{z as t,w as r,D as _}from"./DynamicForm-J8A9ZIio.js";import{B as m}from"./button-CDZ0ch-p.js";import{H as I}from"./h-stack-BuDFXb-_.js";import{I as L}from"./image-rDm62aQ4.js";import{V as u}from"./v-stack-DNJm09El.js";import{H as S}from"./heading-GTlKAcbx.js";import{S as k}from"./stack-C7r7ZhPl.js";import{C as F,a as D,b as N}from"./card-Cz2YP4fb.js";import"./create-recipe-context-_8bgquqP.js";import"./index-BHL8jL0s.js";import"./index-chp1rBSu.js";import"./floating-ui.dom-DTz9C7ph.js";import"./index-DTyY48lw.js";import"./checkbox-CG2T94UG.js";import"./attr-C3Jtgmrz.js";import"./use-environment-context-C3WQxcjj.js";import"./checkbox.anatomy-DVTTplQt.js";import"./box-CKOsCi38.js";import"./icon-button-CFWI_TPI.js";import"./omit-DMKC3Nzx.js";import"./flex-DSRmREoO.js";const x=t.object({first_name:r(t.string().trim().min(2,{message:"Il nome deve contenere almeno 2 caratteri"}).max(50,{message:"Il nome non può superare i 50 caratteri"}),{label:"Nome",autocomplete:"first-name",row:"row-1",step:0}),last_name:r(t.string().trim().min(2,{message:"Il cognome deve contenere almeno 2 caratteri"}).max(50,{message:"Il cognome non può superare i 50 caratteri"}),{label:"Cognome",autocomplete:"last-name",row:"row-1",step:0}),bday:r(t.coerce.date({required_error:"La data di nascita è obbligatoria",invalid_type_error:"Formato data non valido"}).max(new Date,{message:"La data non può essere nel futuro"}).transform(a=>a.getTime()),{label:"Data di Nascita",autocomplete:"bday",row:"row-2",step:0}),username:r(t.string().trim(),{label:"Nickname",autocomplete:"username",step:1,style:{width:{sm:"20rem"}}}),gender:r(t.enum(["male","female"]).nullable().default(null),{label:"Gender",labels:["Male","Female"],autocomplete:"gender",step:1,style:{width:{sm:"20rem"}}}),email:r(t.string().trim().toLowerCase().email({message:"Inserisci un’email valida"}),{label:"Email",autocomplete:"email",row:"row-3",step:2}),confirm_email:r(t.string().trim().toLowerCase().email({message:"Inserisci un’email valida"}),{label:"Ripeti Email",autocomplete:"confirm-email",row:"row-3",step:2}),password:r(t.string().trim().min(6,{message:"La password deve contenere almeno 6 caratteri"}).max(100,{message:"La password non può superare i 100 caratteri"}).regex(/[A-Z]/,{message:"La password deve contenere almeno una lettera maiuscola"}).regex(/\d/,{message:"La password deve contenere almeno un numero"}),{label:"Password",autocomplete:"password",row:"row-4",step:2}),confirm_password:r(t.string().trim().min(6,{message:"La password deve contenere almeno 6 caratteri"}).max(100,{message:"La password non può superare i 100 caratteri"}),{label:"Ripeti Password",autocomplete:"confirm-password",row:"row-4",step:2})}).superRefine((a,n)=>{a.email!==a.confirm_email&&n.addIssue({code:t.ZodIssueCode.custom,message:"Le email non coincidono.",path:["confirm_email"]}),a.password!==a.confirm_password&&n.addIssue({code:t.ZodIssueCode.custom,message:"Le password non coincidono.",path:["confirm_password"]})});x.innerType();const b=({rootStyle:a,children:n,submit:y})=>{const[l,c]=p.useState(0),[h,d]=p.useState(!1);async function R(o,s){c(o),d(s)}async function j(o,s){c(o),d(s)}return e.jsx(F,{flexDirection:"row",borderRadius:"10px",...a,children:e.jsxs(I,{gap:"1rem",padding:"2rem",justifyContent:"center",children:[e.jsx(L,{borderRadius:"10px",display:{base:"none",lg:"block"},objectFit:"cover",height:"15rem",src:"undefined/assets/background_card_register.png",alt:""}),e.jsxs(u,{children:[e.jsxs(u,{children:[e.jsx(S,{textStyle:"4xl",children:"Registrazione"}),n]}),e.jsx(_,{schema:x,step:l,onNext:R,onBack:j,render:(o,s,v,C)=>e.jsxs(e.Fragment,{children:[e.jsx(D,{children:e.jsx(k,{gap:"4",width:{md:"fit-content"},children:o})}),e.jsxs(N,{justifyContent:"flex-end",paddingY:"1rem",flexWrap:"wrap",children:[l!==0&&e.jsx(m,{onClick:()=>C(),variant:"outline",colorPalette:"cyan",width:"40%",children:"Indietro"}),h?e.jsx(m,{onClick:s(y),variant:"solid",colorPalette:"cyan",width:"40%",children:"Crea Account"}):e.jsx(m,{onClick:()=>v(),variant:"subtle",colorPalette:"cyan",width:"40%",children:"Avanti"})]})]})})]})]})})};b.__docgenInfo={description:"",methods:[],displayName:"RegisterForm",props:{children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},rootStyle:{required:!1,tsType:{name:"intersection",raw:"Card.RootProps & React.RefAttributes<HTMLDivElement>",elements:[{name:"Card.RootProps"},{name:"ReactRefAttributes",raw:"React.RefAttributes<HTMLDivElement>",elements:[{name:"HTMLDivElement"}]}]},description:""},submit:{required:!0,tsType:{name:"signature",type:"function",raw:"(data: FormInputs) => void",signature:{arguments:[{type:{name:"z.infer",elements:[{name:"inputs"}],raw:"z.infer<typeof inputs>"},name:"data"}],return:{name:"void"}}},description:""}}};const ae={title:"Components/RegisterForm",component:b,tags:["autodocs"]},i={args:{submit:a=>alert(`Registrazione completata:
`+JSON.stringify(a))}};var g,f,w;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  args: {
    submit: (data: any) => alert('Registrazione completata:\\n' + JSON.stringify(data))
  }
}`,...(w=(f=i.parameters)==null?void 0:f.docs)==null?void 0:w.source}}};const re=["Default"];export{i as Default,re as __namedExportsOrder,ae as default};
