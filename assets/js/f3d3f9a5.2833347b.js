"use strict";(self.webpackChunkreact_goblin_system_docs=self.webpackChunkreact_goblin_system_docs||[]).push([[192],{3023:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var r=t(3696);const o={},s=r.createContext(o);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(s.Provider,{value:n},e.children)}},8435:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"pages/index","title":"Page Layouts","description":"Page layouts provide reusable templates for common UI patterns in your application. These layouts were formerly in the layouts directory but have been migrated to the pages directory and refactored to use Goblin System\'s native components instead of external UI libraries.","source":"@site/docs/pages/index.md","sourceDirName":"pages","slug":"/pages/","permalink":"/pkg-fe-react-goblin-system/docs/pages/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"docs","previous":{"title":"Text","permalink":"/pkg-fe-react-goblin-system/docs/components/typography/text"},"next":{"title":"Error Page","permalink":"/pkg-fe-react-goblin-system/docs/pages/error"}}');var o=t(2540),s=t(3023);const a={sidebar_position:1},i="Page Layouts",l={},c=[{value:"Available Page Layouts",id:"available-page-layouts",level:2},{value:"Usage",id:"usage",level:2},{value:"Integration with React Router",id:"integration-with-react-router",level:2},{value:"Component Architecture",id:"component-architecture",level:2},{value:"Creating Custom Layouts",id:"creating-custom-layouts",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"page-layouts",children:"Page Layouts"})}),"\n",(0,o.jsxs)(n.p,{children:["Page layouts provide reusable templates for common UI patterns in your application. These layouts were formerly in the ",(0,o.jsx)(n.code,{children:"layouts"})," directory but have been migrated to the ",(0,o.jsx)(n.code,{children:"pages"})," directory and refactored to use Goblin System's native components instead of external UI libraries."]}),"\n",(0,o.jsx)(n.h2,{id:"available-page-layouts",children:"Available Page Layouts"}),"\n",(0,o.jsx)(n.p,{children:"Goblin System includes the following page layouts:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"/pkg-fe-react-goblin-system/docs/pages/error",children:"Error"})," - Displays error states and messages"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"/pkg-fe-react-goblin-system/docs/pages/loading",children:"Loading"})," - Shows loading screens during data fetching or processing"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"/pkg-fe-react-goblin-system/docs/pages/transformer",children:"Transformer"})," - Handles data transformation views and workflows"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,o.jsx)(n.p,{children:"You can import and use these page layouts in your application:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"import { ErrorPage } from 'pkg-fe-react-goblin-system/pages/Error';\nimport { LoadingPage } from 'pkg-fe-react-goblin-system/pages/Loading';\nimport { TransformerPage } from 'pkg-fe-react-goblin-system/pages/Transformer';\n\nfunction MyApp() {\n  const { isLoading, error, data } = useSomeData();\n  \n  if (isLoading) {\n    return <LoadingPage message=\"Loading your data...\" />;\n  }\n  \n  if (error) {\n    return <ErrorPage \n      title=\"Something went wrong\" \n      message={error.message} \n      onRetry={() => refetchData()} \n    />;\n  }\n  \n  // Return normal app content with the data\n  return <YourAppContent data={data} />;\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"integration-with-react-router",children:"Integration with React Router"}),"\n",(0,o.jsx)(n.p,{children:"These page layouts work well with React Router for handling different application states:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:'import { Routes, Route } from \'react-router-dom\';\nimport { ErrorPage } from \'pkg-fe-react-goblin-system/pages/Error\';\nimport { LoadingPage } from \'pkg-fe-react-goblin-system/pages/Loading\';\n\nfunction AppRoutes() {\n  return (\n    <Routes>\n      <Route path="/" element={<HomePage />} />\n      <Route path="/dashboard" element={<Dashboard />} />\n      <Route path="/loading" element={<LoadingPage />} />\n      <Route path="/error" element={<ErrorPage />} />\n      <Route path="*" element={<ErrorPage title="Page Not Found" statusCode={404} />} />\n    </Routes>\n  );\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"component-architecture",children:"Component Architecture"}),"\n",(0,o.jsx)(n.p,{children:"All page layouts follow a consistent architecture:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Modularity"})," - Each layout is focused on a specific use case"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Customizability"})," - Props allow for customization of content and behavior"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Responsiveness"})," - Layouts adapt to different screen sizes"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Accessibility"})," - Built with accessibility best practices"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"The layouts have been refactored to use Goblin System's native components:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Container"})," and ",(0,o.jsx)(n.code,{children:"Grid"})," for layout structure (replacing Flex)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"IconButton"})," for interactive icons (replacing Icon)"]}),"\n",(0,o.jsxs)(n.li,{children:["Custom components using ",(0,o.jsx)(n.code,{children:"Alert"})," for empty states (replacing EmptyState)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Spinner"})," for loading indicators (replacing ProgressBar)"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"creating-custom-layouts",children:"Creating Custom Layouts"}),"\n",(0,o.jsx)(n.p,{children:"You can create your own custom layouts by composing Goblin System components:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"import React from 'react';\nimport { \n  Container, \n  Grid, \n  Col, \n  Text, \n  Button \n} from 'pkg-fe-react-goblin-system';\n\nfunction CustomLayout({ title, children, footerContent }) {\n  return (\n    <Container>\n      <Grid>\n        <Col xs={12}>\n          <header>\n            <Text variant=\"h1\">{title}</Text>\n          </header>\n        </Col>\n        \n        <Col xs={12}>\n          <main>{children}</main>\n        </Col>\n        \n        <Col xs={12}>\n          <footer>\n            {footerContent}\n          </footer>\n        </Col>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default CustomLayout;\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);