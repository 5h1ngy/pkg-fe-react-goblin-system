"use strict";(self.webpackChunkreact_goblin_system_docs=self.webpackChunkreact_goblin_system_docs||[]).push([[169],{3023:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>t});var r=s(3696);const i={},o=r.createContext(i);function l(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(o.Provider,{value:n},e.children)}},4756:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"components/spinner","title":"Spinner","description":"The Spinner component provides a visual loading indicator that replaces Chakra UI\'s ProgressBar component with a simpler, more versatile solution.","source":"@site/docs/components/spinner.md","sourceDirName":"components","slug":"/components/spinner","permalink":"/pkg-fe-react-goblin-system/docs/components/spinner","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"docs","previous":{"title":"Modal","permalink":"/pkg-fe-react-goblin-system/docs/components/feedback/modal"},"next":{"title":"Text","permalink":"/pkg-fe-react-goblin-system/docs/components/typography/text"}}');var i=s(2540),o=s(3023);const l={sidebar_position:3},t="Spinner",a={},d=[{value:"Overview",id:"overview",level:2},{value:"Installation",id:"installation",level:2},{value:"Basic Usage",id:"basic-usage",level:2},{value:"API Reference",id:"api-reference",level:2},{value:"Properties",id:"properties",level:3},{value:"Examples",id:"examples",level:2},{value:"Basic Spinner",id:"basic-spinner",level:3},{value:"Different Sizes",id:"different-sizes",level:3},{value:"Color Variations",id:"color-variations",level:3},{value:"With Visible Label",id:"with-visible-label",level:3},{value:"Custom Animation Speed",id:"custom-animation-speed",level:3},{value:"With Custom Styles",id:"with-custom-styles",level:3},{value:"Migration from Chakra UI ProgressBar",id:"migration-from-chakra-ui-progressbar",level:2},{value:"Indeterminate Progress Bar",id:"indeterminate-progress-bar",level:3},{value:"Progress Bar with Label",id:"progress-bar-with-label",level:3},{value:"Custom Sized Progress Bar",id:"custom-sized-progress-bar",level:3},{value:"Design and Implementation",id:"design-and-implementation",level:2},{value:"Accessibility Considerations",id:"accessibility-considerations",level:2},{value:"Customization",id:"customization",level:2},{value:"Using with Styled Components",id:"using-with-styled-components",level:3},{value:"Creating a Progress Bar Alternative",id:"creating-a-progress-bar-alternative",level:3},{value:"Related Components",id:"related-components",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"spinner",children:"Spinner"})}),"\n",(0,i.jsx)(n.p,{children:"The Spinner component provides a visual loading indicator that replaces Chakra UI's ProgressBar component with a simpler, more versatile solution."}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(n.p,{children:"The Spinner component offers:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Visual Feedback"})," - Indicates loading or processing states"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Size Variations"})," - Multiple size options for different UI contexts"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Color Options"})," - Theme-based color variations"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Accessibility"})," - Built-in accessibility features"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Animation Control"})," - Options to control animation behavior"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(n.p,{children:"The Spinner component is included in the main package:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm install pkg-fe-react-goblin-system\n"})}),"\n",(0,i.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"import { Spinner } from 'pkg-fe-react-goblin-system';\n\nfunction LoadingComponent() {\n  return (\n    <div>\n      <Spinner />\n      <p>Loading content...</p>\n    </div>\n  );\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,i.jsx)(n.h3,{id:"properties",children:"Properties"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Prop"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Default"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"size"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"'xs' | 'sm' | 'md' | 'lg' | 'xl'"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"'md'"})}),(0,i.jsx)(n.td,{children:"Size of the spinner"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"color"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"'primary'"})}),(0,i.jsx)(n.td,{children:"Color of the spinner (any theme color)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"thickness"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"'2px'"})}),(0,i.jsx)(n.td,{children:"Thickness of the spinner track"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"speed"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"'0.7s'"})}),(0,i.jsx)(n.td,{children:"Speed of the animation"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"emptyColor"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"'transparent'"})}),(0,i.jsx)(n.td,{children:"Color of the empty area"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"label"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"'Loading...'"})}),(0,i.jsx)(n.td,{children:"Text label for screen readers"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"labelPosition"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"'top' | 'bottom' | 'left' | 'right'"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"undefined"})}),(0,i.jsx)(n.td,{children:"Position of the visible label"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"showLabel"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"boolean"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"false"})}),(0,i.jsx)(n.td,{children:"Whether to show the label visibly"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"className"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"''"})}),(0,i.jsx)(n.td,{children:"Additional CSS class names"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.h3,{id:"basic-spinner",children:"Basic Spinner"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"<Spinner />\n"})}),"\n",(0,i.jsx)(n.h3,{id:"different-sizes",children:"Different Sizes"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'<div>\n  <Spinner size="xs" />\n  <Spinner size="sm" />\n  <Spinner size="md" />\n  <Spinner size="lg" />\n  <Spinner size="xl" />\n</div>\n'})}),"\n",(0,i.jsx)(n.h3,{id:"color-variations",children:"Color Variations"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'<div>\n  <Spinner color="primary" />\n  <Spinner color="secondary" />\n  <Spinner color="success" />\n  <Spinner color="warning" />\n  <Spinner color="error" />\n  <Spinner color="info" />\n</div>\n'})}),"\n",(0,i.jsx)(n.h3,{id:"with-visible-label",children:"With Visible Label"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'<Spinner \n  label="Fetching data" \n  showLabel={true} \n  labelPosition="bottom" \n/>\n'})}),"\n",(0,i.jsx)(n.h3,{id:"custom-animation-speed",children:"Custom Animation Speed"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'<Spinner \n  size="lg" \n  speed="1.2s" \n  thickness="4px"\n/>\n'})}),"\n",(0,i.jsx)(n.h3,{id:"with-custom-styles",children:"With Custom Styles"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'<Spinner \n  color="secondary" \n  emptyColor="rgba(0, 0, 0, 0.1)" \n  className="custom-spinner" \n/>\n'})}),"\n",(0,i.jsx)(n.h2,{id:"migration-from-chakra-ui-progressbar",children:"Migration from Chakra UI ProgressBar"}),"\n",(0,i.jsx)(n.p,{children:"If you're migrating from Chakra UI's ProgressBar component, here's how to convert to Goblin System's Spinner:"}),"\n",(0,i.jsx)(n.h3,{id:"indeterminate-progress-bar",children:"Indeterminate Progress Bar"}),"\n",(0,i.jsx)(n.p,{children:"Before (Chakra UI):"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'<Progress isIndeterminate color="blue.300" />\n'})}),"\n",(0,i.jsx)(n.p,{children:"After (Goblin System):"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'<Spinner color="primary" />\n'})}),"\n",(0,i.jsx)(n.h3,{id:"progress-bar-with-label",children:"Progress Bar with Label"}),"\n",(0,i.jsx)(n.p,{children:"Before (Chakra UI):"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'<Box>\n  <Progress isIndeterminate colorScheme="green" />\n  <Text mt={2}>Loading data...</Text>\n</Box>\n'})}),"\n",(0,i.jsx)(n.p,{children:"After (Goblin System):"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'<Spinner \n  color="success"\n  label="Loading data..."\n  showLabel={true}\n  labelPosition="bottom"\n/>\n'})}),"\n",(0,i.jsx)(n.h3,{id:"custom-sized-progress-bar",children:"Custom Sized Progress Bar"}),"\n",(0,i.jsx)(n.p,{children:"Before (Chakra UI):"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'<Progress \n  isIndeterminate \n  size="sm" \n  colorScheme="purple" \n/>\n'})}),"\n",(0,i.jsx)(n.p,{children:"After (Goblin System):"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'<Spinner \n  size="sm"\n  color="secondary"\n/>\n'})}),"\n",(0,i.jsx)(n.h2,{id:"design-and-implementation",children:"Design and Implementation"}),"\n",(0,i.jsx)(n.p,{children:"The Spinner component is built with:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CSS Animations"})," - Smooth, performant loading animations"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Accessibility Focus"})," - Proper ARIA attributes for screen readers"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Theme Integration"})," - Using theme tokens for colors and sizes"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Under the hood, the Spinner uses:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"// Simplified implementation\nconst Spinner = ({ \n  size = 'md', \n  color = 'primary', \n  thickness = '2px',\n  speed = '0.7s',\n  emptyColor = 'transparent',\n  label = 'Loading...',\n  labelPosition,\n  showLabel = false,\n  className,\n  ...props \n}) => {\n  return (\n    <SpinnerContainer \n      className={className}\n      $labelPosition={labelPosition}\n      {...props}\n    >\n      <SpinnerElement\n        $size={size}\n        $color={color}\n        $thickness={thickness}\n        $speed={speed}\n        $emptyColor={emptyColor}\n        aria-label={label}\n        role=\"status\"\n      />\n      {showLabel && (\n        <SpinnerLabel $position={labelPosition}>\n          {label}\n        </SpinnerLabel>\n      )}\n    </SpinnerContainer>\n  );\n};\n"})}),"\n",(0,i.jsx)(n.h2,{id:"accessibility-considerations",children:"Accessibility Considerations"}),"\n",(0,i.jsx)(n.p,{children:"The Spinner component follows these accessibility best practices:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Uses appropriate ARIA roles (",(0,i.jsx)(n.code,{children:'role="status"'}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["Provides screen reader text via ",(0,i.jsx)(n.code,{children:"aria-label"})]}),"\n",(0,i.jsx)(n.li,{children:"Can make the label visible for all users"}),"\n",(0,i.jsx)(n.li,{children:"Ensures animations respect user preferences for reduced motion"}),"\n",(0,i.jsx)(n.li,{children:"Animation does not flash or otherwise cause issues for users with visual sensitivities"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"customization",children:"Customization"}),"\n",(0,i.jsx)(n.h3,{id:"using-with-styled-components",children:"Using with Styled Components"}),"\n",(0,i.jsx)(n.p,{children:"You can extend the Spinner with styled-components:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'import styled from \'styled-components\';\nimport { Spinner } from \'pkg-fe-react-goblin-system\';\n\nconst CustomSpinner = styled(Spinner)`\n  margin: ${props => props.theme.spacing.md};\n  \n  // Style the label if needed\n  span {\n    font-weight: ${props => props.theme.typography.fontWeight.medium};\n    color: ${props => props.theme.colors.text.secondary};\n  }\n`;\n\nfunction LoadingOverlay() {\n  return (\n    <div className="overlay">\n      <CustomSpinner \n        size="xl" \n        color="primary" \n        label="Processing your request" \n        showLabel={true}\n        labelPosition="bottom"\n      />\n    </div>\n  );\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"creating-a-progress-bar-alternative",children:"Creating a Progress Bar Alternative"}),"\n",(0,i.jsx)(n.p,{children:"If you need a determinate progress bar instead of a spinner:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'import { useState, useEffect } from \'react\';\nimport styled from \'styled-components\';\n\nconst ProgressBarContainer = styled.div`\n  width: 100%;\n  height: 8px;\n  background-color: ${props => props.theme.colors.neutral[200]};\n  border-radius: ${props => props.theme.radii.pill};\n  overflow: hidden;\n`;\n\nconst ProgressIndicator = styled.div`\n  height: 100%;\n  width: ${props => props.$progress}%;\n  background-color: ${props => props.theme.colors[props.$color].main};\n  transition: width 0.3s ease;\n`;\n\nfunction ProgressBar({ progress, color = \'primary\' }) {\n  return (\n    <ProgressBarContainer role="progressbar" aria-valuenow={progress} aria-valuemin="0" aria-valuemax="100">\n      <ProgressIndicator $progress={progress} $color={color} />\n    </ProgressBarContainer>\n  );\n}\n\n// Usage example\nfunction FileUpload() {\n  const [progress, setProgress] = useState(0);\n  \n  useEffect(() => {\n    const interval = setInterval(() => {\n      setProgress(prev => {\n        if (prev < 100) return prev + 10;\n        clearInterval(interval);\n        return 100;\n      });\n    }, 500);\n    \n    return () => clearInterval(interval);\n  }, []);\n  \n  return (\n    <div>\n      <h3>Uploading file...</h3>\n      <ProgressBar progress={progress} color="success" />\n      <p>{progress}% complete</p>\n    </div>\n  );\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"related-components",children:"Related Components"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/pkg-fe-react-goblin-system/docs/pages/loading",children:"LoadingPage"})," - Full page loading component"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Button"})," - Can incorporate a spinner for loading states"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/pkg-fe-react-goblin-system/docs/components/alert",children:"Alert"})," - For providing loading status messages"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);