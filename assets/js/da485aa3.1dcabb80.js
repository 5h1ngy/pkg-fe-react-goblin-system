"use strict";(self.webpackChunkpkg_fe_react_goblin_system=self.webpackChunkpkg_fe_react_goblin_system||[]).push([[76],{8433:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"styles/global-style","title":"Global Style","description":"Goblin System exposes two global styling helpers: CssBaseline and GlobalStyles.","source":"@site/../docs/styles/global-style.md","sourceDirName":"styles","slug":"/styles/global-style","permalink":"/pkg-fe-react-goblin-system/docs/styles/global-style","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Global Style"},"sidebar":"docs","previous":{"title":"Utilities & Portals","permalink":"/pkg-fe-react-goblin-system/docs/components/utilities"},"next":{"title":"Theme Tokens","permalink":"/pkg-fe-react-goblin-system/docs/styles/theme"}}');var l=s(4848),o=s(8453);const r={sidebar_position:1,title:"Global Style"},i="Global Style",c={},d=[{value:"CssBaseline",id:"cssbaseline",level:2},{value:"GlobalStyles",id:"globalstyles",level:2},{value:"Fonts and metrics",id:"fonts-and-metrics",level:2}];function a(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"global-style",children:"Global Style"})}),"\n",(0,l.jsxs)(n.p,{children:["Goblin System exposes two global styling helpers: ",(0,l.jsx)(n.code,{children:"CssBaseline"})," and ",(0,l.jsx)(n.code,{children:"GlobalStyles"}),".",(0,l.jsx)(n.br,{}),"\n","Both rely on ",(0,l.jsx)(n.code,{children:"styled-components"})," and feed directly from the active Goblin theme."]}),"\n",(0,l.jsx)(n.h2,{id:"cssbaseline",children:"CssBaseline"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"CssBaseline"})," is a ready-to-use component that injects the standard Goblin resets:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"box-sizing: border-box"})," everywhere."]}),"\n",(0,l.jsxs)(n.li,{children:["Smooth scrolling on ",(0,l.jsx)(n.code,{children:"html"})," and momentum scrolling on touch devices."]}),"\n",(0,l.jsxs)(n.li,{children:["Dark-first ",(0,l.jsx)(n.code,{children:"body"})," background, using the current palette mode."]}),"\n",(0,l.jsxs)(n.li,{children:["Typography stack (",(0,l.jsx)(n.code,{children:"Inter"}),", system fonts) applied to the root."]}),"\n",(0,l.jsx)(n.li,{children:"Normalised anchor, image, button, input, and textarea styles."}),"\n",(0,l.jsx)(n.li,{children:"Scrollbar theming for WebKit and Firefox."}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-tsx",children:"import { CssBaseline, GoblinThemeProvider } from 'pkg-fe-react-goblin-system'\nimport { theme } from './theme'\n\nexport function Providers({ children }: { children: React.ReactNode }) {\n  return (\n    <GoblinThemeProvider theme={theme}>\n      <CssBaseline />\n      {children}\n    </GoblinThemeProvider>\n  )\n}\n"})}),"\n",(0,l.jsx)(n.h2,{id:"globalstyles",children:"GlobalStyles"}),"\n",(0,l.jsxs)(n.p,{children:["If you need to append project-specific rules, import ",(0,l.jsx)(n.code,{children:"GlobalStyles"}),"\u2014a plain ",(0,l.jsx)(n.code,{children:"createGlobalStyle"})," export\u2014and add your overrides underneath it."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-tsx",children:"import { createGlobalStyle } from 'styled-components'\nimport { GlobalStyles } from 'pkg-fe-react-goblin-system'\n\nconst CustomOverrides = createGlobalStyle`\n  ::selection {\n    background: ${({ theme }) => theme.palette.secondary.main};\n    color: ${({ theme }) => theme.palette.background.paper};\n  }\n`\n\nexport function Providers({ children }: { children: React.ReactNode }) {\n  return (\n    <>\n      <GlobalStyles />\n      <CustomOverrides />\n      {children}\n    </>\n  )\n}\n"})}),"\n",(0,l.jsx)(n.p,{children:"Because the overrides subscribe to the theme, the palette adapts automatically when the user switches between light and dark modes or picks a new secondary color."}),"\n",(0,l.jsx)(n.h2,{id:"fonts-and-metrics",children:"Fonts and metrics"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Primary font: ",(0,l.jsx)(n.code,{children:"Inter"}),", falling back to ",(0,l.jsx)(n.code,{children:"-apple-system"}),", ",(0,l.jsx)(n.code,{children:"BlinkMacSystemFont"}),", ",(0,l.jsx)(n.code,{children:"Segoe UI"}),", ",(0,l.jsx)(n.code,{children:"sans-serif"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:["Base font size: ",(0,l.jsx)(n.code,{children:"14px"})," (0.875rem) with density tuned for product dashboards and content-heavy shells."]}),"\n",(0,l.jsxs)(n.li,{children:["Line heights follow the typography scale defined in ",(0,l.jsx)(n.code,{children:"createGoblinTheme"}),"."]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["Override these values by passing ",(0,l.jsx)(n.code,{children:"typography"})," overrides into ",(0,l.jsx)(n.code,{children:"createGoblinTheme"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>i});var t=s(6540);const l={},o=t.createContext(l);function r(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);