"use strict";(self.webpackChunkreact_goblin_system_docs=self.webpackChunkreact_goblin_system_docs||[]).push([[332],{662:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"services/http-handlers","title":"HTTP Request Handlers","description":"The HTTP Request Handlers module provides a set of utility functions for handling API requests, responses, and errors in a consistent way across your application.","source":"@site/docs/services/http-handlers.md","sourceDirName":"services","slug":"/services/http-handlers","permalink":"/pkg-fe-react-goblin-system/docs/services/http-handlers","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"docs","previous":{"title":"Auth Provider","permalink":"/pkg-fe-react-goblin-system/docs/providers/auth-provider"},"next":{"title":"Authentication Service","permalink":"/pkg-fe-react-goblin-system/docs/services/auth-service"}}');var t=r(2540),i=r(3023);const a={sidebar_position:2},o="HTTP Request Handlers",l={},c=[{value:"Overview",id:"overview",level:2},{value:"Installation",id:"installation",level:2},{value:"Basic Usage",id:"basic-usage",level:2},{value:"API Reference",id:"api-reference",level:2},{value:"API Client Setup",id:"api-client-setup",level:3},{value:"<code>createApiClient(config): AxiosInstance</code>",id:"createapiclientconfig-axiosinstance",level:4},{value:"Response Handlers",id:"response-handlers",level:3},{value:"<code>handleApiResponse(response): any</code>",id:"handleapiresponseresponse-any",level:4},{value:"Error Handlers",id:"error-handlers",level:3},{value:"<code>handleApiError(error): Error</code>",id:"handleapierrorerror-error",level:4},{value:"Authentication Helpers",id:"authentication-helpers",level:3},{value:"<code>addAuthHeader(config, token): AxiosRequestConfig</code>",id:"addauthheaderconfig-token-axiosrequestconfig",level:4},{value:"Examples",id:"examples",level:2},{value:"Creating a Custom API Service",id:"creating-a-custom-api-service",level:3},{value:"Using with React Hooks",id:"using-with-react-hooks",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Error Handling Strategy",id:"error-handling-strategy",level:2},{value:"Related Components",id:"related-components",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"http-request-handlers",children:"HTTP Request Handlers"})}),"\n",(0,t.jsx)(n.p,{children:"The HTTP Request Handlers module provides a set of utility functions for handling API requests, responses, and errors in a consistent way across your application."}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(n.p,{children:"The HTTP Handlers service offers:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Request Interceptors"})," - Automatically add authentication tokens and headers"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Response Handlers"})," - Standardized processing of API responses"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Error Handling"})," - Consistent error processing with proper error messages"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Request Utilities"})," - Helper functions for common API operations"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(n.p,{children:"The HTTP Handlers service is included in the main package:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm install pkg-fe-react-goblin-system\n"})}),"\n",(0,t.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,t.jsx)(n.p,{children:"Import the handlers in your service or component files:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"import { \n  createApiClient,\n  handleApiError,\n  handleApiResponse\n} from 'pkg-fe-react-goblin-system/services/handlers';\n\n// Create a configured API client\nconst apiClient = createApiClient({\n  baseURL: 'https://api.example.com',\n  timeout: 10000,\n});\n\n// Making a request with error handling\nconst fetchData = async () => {\n  try {\n    const response = await apiClient.get('/data');\n    return handleApiResponse(response);\n  } catch (error) {\n    throw handleApiError(error);\n  }\n};\n"})}),"\n",(0,t.jsx)(n.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,t.jsx)(n.h3,{id:"api-client-setup",children:"API Client Setup"}),"\n",(0,t.jsx)(n.h4,{id:"createapiclientconfig-axiosinstance",children:(0,t.jsx)(n.code,{children:"createApiClient(config): AxiosInstance"})}),"\n",(0,t.jsx)(n.p,{children:"Creates and configures an Axios instance with interceptors for handling authentication and errors."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"import { createApiClient } from 'pkg-fe-react-goblin-system/services/handlers';\n\nconst apiClient = createApiClient({\n  baseURL: 'https://api.example.com',\n  timeout: 5000,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n  },\n});\n\n// Use the configured client for API requests\nconst response = await apiClient.get('/users');\n"})}),"\n",(0,t.jsx)(n.h3,{id:"response-handlers",children:"Response Handlers"}),"\n",(0,t.jsx)(n.h4,{id:"handleapiresponseresponse-any",children:(0,t.jsx)(n.code,{children:"handleApiResponse(response): any"})}),"\n",(0,t.jsx)(n.p,{children:"Processes an API response, extracting and validating the data."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"import { handleApiResponse } from 'pkg-fe-react-goblin-system/services/handlers';\n\nconst fetchUsers = async () => {\n  const response = await apiClient.get('/users');\n  return handleApiResponse(response);\n};\n"})}),"\n",(0,t.jsx)(n.h3,{id:"error-handlers",children:"Error Handlers"}),"\n",(0,t.jsx)(n.h4,{id:"handleapierrorerror-error",children:(0,t.jsx)(n.code,{children:"handleApiError(error): Error"})}),"\n",(0,t.jsx)(n.p,{children:"Processes API errors into standardized error objects with helpful messages."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"import { handleApiError } from 'pkg-fe-react-goblin-system/services/handlers';\n\nconst fetchData = async () => {\n  try {\n    const response = await apiClient.get('/data');\n    return handleApiResponse(response);\n  } catch (error) {\n    // Transforms the error into a standardized format\n    const standardError = handleApiError(error);\n    console.error(standardError.message);\n    throw standardError;\n  }\n};\n"})}),"\n",(0,t.jsx)(n.h3,{id:"authentication-helpers",children:"Authentication Helpers"}),"\n",(0,t.jsx)(n.h4,{id:"addauthheaderconfig-token-axiosrequestconfig",children:(0,t.jsx)(n.code,{children:"addAuthHeader(config, token): AxiosRequestConfig"})}),"\n",(0,t.jsx)(n.p,{children:"Adds an authentication token to a request configuration."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"import { addAuthHeader } from 'pkg-fe-react-goblin-system/services/handlers';\nimport { getToken } from 'pkg-fe-react-goblin-system/services/auth';\n\nconst makeAuthenticatedRequest = async () => {\n  const token = getToken();\n  const config = addAuthHeader({\n    url: '/protected-resource',\n    method: 'GET',\n  }, token);\n  \n  return apiClient(config);\n};\n"})}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(n.h3,{id:"creating-a-custom-api-service",children:"Creating a Custom API Service"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"// src/services/userService.js\nimport { \n  createApiClient, \n  handleApiResponse, \n  handleApiError \n} from 'pkg-fe-react-goblin-system/services/handlers';\n\n// Create an API client for user-related endpoints\nconst userApiClient = createApiClient({\n  baseURL: 'https://api.example.com/users',\n});\n\n// User service functions\nexport const getUser = async (userId) => {\n  try {\n    const response = await userApiClient.get(`/${userId}`);\n    return handleApiResponse(response);\n  } catch (error) {\n    throw handleApiError(error);\n  }\n};\n\nexport const updateUser = async (userId, userData) => {\n  try {\n    const response = await userApiClient.put(`/${userId}`, userData);\n    return handleApiResponse(response);\n  } catch (error) {\n    throw handleApiError(error);\n  }\n};\n\nexport const deleteUser = async (userId) => {\n  try {\n    const response = await userApiClient.delete(`/${userId}`);\n    return handleApiResponse(response);\n  } catch (error) {\n    throw handleApiError(error);\n  }\n};\n"})}),"\n",(0,t.jsx)(n.h3,{id:"using-with-react-hooks",children:"Using with React Hooks"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"import React, { useState, useEffect } from 'react';\nimport { createApiClient, handleApiResponse, handleApiError } from 'pkg-fe-react-goblin-system/services/handlers';\n\n// Create API client\nconst apiClient = createApiClient({\n  baseURL: 'https://api.example.com',\n});\n\n// Custom hook for data fetching\nfunction useApi(url) {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await apiClient.get(url);\n        const processedData = handleApiResponse(response);\n        setData(processedData);\n        setError(null);\n      } catch (err) {\n        const processedError = handleApiError(err);\n        setError(processedError);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [url]);\n\n  return { data, error, loading };\n}\n\n// Usage in a component\nfunction UserProfile({ userId }) {\n  const { data: user, error, loading } = useApi(`/users/${userId}`);\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>Error: {error.message}</div>;\n  \n  return (\n    <div>\n      <h1>{user.name}</h1>\n      <p>Email: {user.email}</p>\n    </div>\n  );\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsx)(n.p,{children:"You can configure the default behavior of the handlers:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"// In your app's entry point\nimport { configureHandlers } from 'pkg-fe-react-goblin-system/services/handlers';\n\nconfigureHandlers({\n  defaultTimeout: 15000,\n  defaultHeaders: {\n    'Content-Type': 'application/json',\n    'X-App-Version': '1.0.0',\n  },\n  errorMessages: {\n    404: 'The requested resource was not found',\n    500: 'An unexpected server error occurred',\n    // Override default error messages\n  },\n});\n"})}),"\n",(0,t.jsx)(n.h2,{id:"error-handling-strategy",children:"Error Handling Strategy"}),"\n",(0,t.jsx)(n.p,{children:"The HTTP Handlers service implements a comprehensive error handling strategy:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Network Errors"}),": Catches and formats network-related issues"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"API Errors"}),": Processes error responses from the API, including status codes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Validation Errors"}),": Handles API validation errors with field-specific messages"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Timeout Handling"}),": Provides clear messages for request timeouts"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Unauthorized Access"}),": Special handling for 401/403 responses"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["When an error occurs, the ",(0,t.jsx)(n.code,{children:"handleApiError"})," function returns a standardized error object with:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"A user-friendly message"}),"\n",(0,t.jsx)(n.li,{children:"The original error"}),"\n",(0,t.jsx)(n.li,{children:"HTTP status code (if applicable)"}),"\n",(0,t.jsx)(n.li,{children:"Error details from the API (if available)"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"related-components",children:"Related Components"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/pkg-fe-react-goblin-system/docs/services/auth-service",children:"Auth Service"})," - Authentication utilities that use these handlers"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"State Management"})," - Redux store and state handlers that integrates with these services"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},3023:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>o});var s=r(3696);const t={},i=s.createContext(t);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);