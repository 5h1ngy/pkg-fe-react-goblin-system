"use strict";(self.webpackChunkreact_goblin_system_docs=self.webpackChunkreact_goblin_system_docs||[]).push([[803],{3023:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>d});var i=t(3696);const s={},r=i.createContext(s);function l(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(r.Provider,{value:n},e.children)}},7753:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"components/typography/text","title":"Text","description":"The Text component is a fundamental element for displaying textual content. It offers various style variants and formatting options to meet all typography needs.","source":"@site/docs/components/typography/text.md","sourceDirName":"components/typography","slug":"/components/typography/text","permalink":"/pkg-fe-react-goblin-system/docs/components/typography/text","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"docs","previous":{"title":"Spinner","permalink":"/pkg-fe-react-goblin-system/docs/components/spinner"},"next":{"title":"Page Layouts","permalink":"/pkg-fe-react-goblin-system/docs/pages/"}}');var s=t(2540),r=t(3023);const l={sidebar_position:1},d="Text",a={},c=[{value:"Importing",id:"importing",level:2},{value:"Basic Usage",id:"basic-usage",level:2},{value:"Properties",id:"properties",level:2},{value:"Variants",id:"variants",level:2},{value:"Style Variants",id:"style-variants",level:3},{value:"Colors",id:"colors",level:3},{value:"Alignment",id:"alignment",level:3},{value:"Weight and Style",id:"weight-and-style",level:3},{value:"Truncated Text",id:"truncated-text",level:3},{value:"Advanced Examples",id:"advanced-examples",level:2},{value:"Paragraph",id:"paragraph",level:3},{value:"Custom Component",id:"custom-component",level:3},{value:"Rich Text Formatting",id:"rich-text-formatting",level:3},{value:"Responsive Typography",id:"responsive-typography",level:2},{value:"Theming",id:"theming",level:2},{value:"Accessibility",id:"accessibility",level:2},{value:"Customization",id:"customization",level:2}];function o(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"text",children:"Text"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"Text"})," component is a fundamental element for displaying textual content. It offers various style variants and formatting options to meet all typography needs."]}),"\n",(0,s.jsx)(n.h2,{id:"importing",children:"Importing"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"import { Text } from 'pkg-fe-react-goblin-system';\n"})}),"\n",(0,s.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'<Text>This is the default text</Text>\n<Text variant="body1">This is body1 text</Text>\n<Text variant="body2">This is body2 text</Text>\n<Text variant="caption">This is caption text</Text>\n<Text variant="overline">THIS IS OVERLINE TEXT</Text>\n'})}),"\n",(0,s.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Property"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"variant"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"'body1' | 'body2' | 'caption' | 'overline'"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"'body1'"})}),(0,s.jsx)(n.td,{children:"Text style variant"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"color"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"-"}),(0,s.jsx)(n.td,{children:"Text color (supports theme colors and CSS values)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"align"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"'left' | 'center' | 'right' | 'justify'"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"'left'"})}),(0,s.jsx)(n.td,{children:"Horizontal alignment"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"weight"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"'regular' | 'medium' | 'bold' | number"})}),(0,s.jsx)(n.td,{children:"-"}),(0,s.jsx)(n.td,{children:"Font weight"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"italic"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsx)(n.td,{children:"Applies italic style"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"transform"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"'none' | 'uppercase' | 'lowercase' | 'capitalize'"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"'none'"})}),(0,s.jsx)(n.td,{children:"Text transformation"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"nowrap"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsx)(n.td,{children:"Prevents text wrapping"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"truncate"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean | number"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsx)(n.td,{children:"Truncates text with ellipsis after one line or specified number of lines"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"fontSize"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string | number"})}),(0,s.jsx)(n.td,{children:"-"}),(0,s.jsx)(n.td,{children:"Custom font size"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"lineHeight"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string | number"})}),(0,s.jsx)(n.td,{children:"-"}),(0,s.jsx)(n.td,{children:"Custom line height"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"paragraph"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsxs)(n.td,{children:["Uses the semantic ",(0,s.jsx)(n.code,{children:"<p>"})," tag and applies margin-bottom"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"component"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"React.ElementType"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"'span'"})}),(0,s.jsx)(n.td,{children:"React component or HTML element to use"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"variants",children:"Variants"}),"\n",(0,s.jsx)(n.h3,{id:"style-variants",children:"Style Variants"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'<Text variant="body1">Body 1 - Main text</Text>\n<Text variant="body2">Body 2 - Secondary text, slightly smaller</Text>\n<Text variant="caption">Caption - Smaller text for labels and notes</Text>\n<Text variant="overline">OVERLINE - SMALL UPPERCASE TEXT FOR HEADERS</Text>\n'})}),"\n",(0,s.jsx)(n.h3,{id:"colors",children:"Colors"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'<Text color="primary">Text with theme primary color</Text>\n<Text color="secondary">Text with theme secondary color</Text>\n<Text color="error">Error text</Text>\n<Text color="textSecondary">Secondary text</Text>\n<Text color="#FF5722">Text with custom color</Text>\n'})}),"\n",(0,s.jsx)(n.h3,{id:"alignment",children:"Alignment"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'<Text align="left">Left-aligned text</Text>\n<Text align="center">Centered text</Text>\n<Text align="right">Right-aligned text</Text>\n<Text align="justify">Justified text. This paragraph demonstrates how text is distributed evenly across the available width, creating uniform spacing between words.</Text>\n'})}),"\n",(0,s.jsx)(n.h3,{id:"weight-and-style",children:"Weight and Style"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'<Text weight="regular">Text with regular weight</Text>\n<Text weight="medium">Text with medium weight</Text>\n<Text weight="bold">Text with bold weight</Text>\n<Text weight={500}>Text with weight 500</Text>\n<Text italic>Italic text</Text>\n<Text weight="bold" italic>Bold and italic text</Text>\n'})}),"\n",(0,s.jsx)(n.h3,{id:"truncated-text",children:"Truncated Text"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"<Text truncate style={{ width: '200px' }}>\n  This text is very long and will be truncated with ellipsis at the end.\n</Text>\n\n{/* Truncate after 2 lines */}\n<Text truncate={2} style={{ width: '200px' }}>\n  This is a very long text that will take up more than one line and will be truncated after the second line with ellipsis.\n</Text>\n"})}),"\n",(0,s.jsx)(n.h2,{id:"advanced-examples",children:"Advanced Examples"}),"\n",(0,s.jsx)(n.h3,{id:"paragraph",children:"Paragraph"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"<Text paragraph>\n  This is a paragraph of text. It uses the semantic paragraph tag and includes appropriate spacing below it. This is useful for creating readable content with proper vertical rhythm.\n</Text>\n\n<Text paragraph>\n  A second paragraph will have proper spacing between it and the previous paragraph.\n</Text>\n"})}),"\n",(0,s.jsx)(n.h3,{id:"custom-component",children:"Custom Component"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'<Text component="label" htmlFor="input-id">\n  This text is rendered as a label\n</Text>\n\n<Text component="h3" variant="body1" weight="bold" color="primary">\n  This is rendered as an H3 heading with body1 styling\n</Text>\n'})}),"\n",(0,s.jsx)(n.h3,{id:"rich-text-formatting",children:"Rich Text Formatting"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'<Text>\n  You can combine <Text weight="bold" component="span">bold</Text>,{\' \'}\n  <Text italic component="span">italic</Text>, and{\' \'}\n  <Text color="primary" component="span">colored</Text> text within\n  a single paragraph.\n</Text>\n'})}),"\n",(0,s.jsx)(n.h2,{id:"responsive-typography",children:"Responsive Typography"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"// This text will be 1rem on mobile, 1.25rem on tablets, and 1.5rem on desktop\n<Text \n  style={{ \n    fontSize: '1rem',\n    '@media (min-width: 768px)': {\n      fontSize: '1.25rem',\n    },\n    '@media (min-width: 1200px)': {\n      fontSize: '1.5rem',\n    }\n  }}\n>\n  Responsive text that adapts to screen size\n</Text>\n"})}),"\n",(0,s.jsx)(n.h2,{id:"theming",children:"Theming"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"Text"})," component can be customized through the theme:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"const customTheme = {\n  typography: {\n    body1: {\n      fontSize: '1rem',\n      lineHeight: 1.6,\n      fontWeight: 400,\n    },\n    body2: {\n      fontSize: '0.875rem',\n      lineHeight: 1.5,\n      fontWeight: 400,\n    },\n    caption: {\n      fontSize: '0.75rem',\n      lineHeight: 1.4,\n      fontWeight: 400,\n    },\n    overline: {\n      fontSize: '0.75rem',\n      lineHeight: 1.4,\n      fontWeight: 500,\n      textTransform: 'uppercase',\n      letterSpacing: '0.08em',\n    },\n  },\n};\n"})}),"\n",(0,s.jsx)(n.h2,{id:"accessibility",children:"Accessibility"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"Text"})," component is designed to support best practices for accessibility:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Uses semantic HTML tags when appropriate (",(0,s.jsx)(n.code,{children:"paragraph"})," \u2192 ",(0,s.jsx)(n.code,{children:"<p>"}),")"]}),"\n",(0,s.jsx)(n.li,{children:"Maintains a consistent text hierarchy through variants"}),"\n",(0,s.jsx)(n.li,{children:"Ensures sufficient contrast with theme colors"}),"\n",(0,s.jsx)(n.li,{children:"Supports text size increase in browsers without breaking"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"customization",children:"Customization"}),"\n",(0,s.jsx)(n.p,{children:"You can customize the base styles of each variant through the theme:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"const customTheme = {\n  typography: {\n    body1: {\n      fontSize: '1rem',\n      lineHeight: 1.6,\n      fontWeight: 400,\n    },\n    body2: {\n      fontSize: '0.875rem',\n      lineHeight: 1.5,\n      fontWeight: 400,\n    },\n    caption: {\n      fontSize: '0.75rem',\n      lineHeight: 1.4,\n      fontWeight: 400,\n    },\n    overline: {\n      fontSize: '0.75rem',\n      lineHeight: 1.4,\n      fontWeight: 500,\n      textTransform: 'uppercase',\n      letterSpacing: '0.08em',\n    },\n  },\n};\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}}}]);