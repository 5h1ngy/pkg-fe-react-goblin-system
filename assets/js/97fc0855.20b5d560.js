"use strict";(self.webpackChunkreact_goblin_system_docs=self.webpackChunkreact_goblin_system_docs||[]).push([[272],{8015:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"link","label":"Installation \ud83d\ude80","href":"/pkg-fe-react-goblin-system/docs/installation","docId":"installation","unlisted":false},{"type":"category","label":"Store \ud83c\udfec","items":[{"type":"link","label":"Overview \ud83d\udcd6","href":"/pkg-fe-react-goblin-system/docs/store/overview","docId":"store/overview","unlisted":false},{"type":"link","label":"Authentication \ud83d\udd10","href":"/pkg-fe-react-goblin-system/docs/store/auth","docId":"store/auth","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"link","label":"HOCs \ud83d\udd27","href":"/pkg-fe-react-goblin-system/docs/hocs","docId":"hocs","unlisted":false},{"type":"link","label":"Providers \ud83c\udf10","href":"/pkg-fe-react-goblin-system/docs/providers","docId":"providers","unlisted":false},{"type":"link","label":"Services \u26a1","href":"/pkg-fe-react-goblin-system/docs/services","docId":"services","unlisted":false}]},"docs":{"hocs":{"id":"hocs","title":"HOCs Module Documentation","description":"The hocs module provides higher-order components (HOCs) to enhance your React components with additional functionality. Currently, this module includes the withRouter HOC, which injects routing properties into a component for seamless integration with React Router.","sidebar":"docs"},"installation":{"id":"installation","title":"Local Installation from Tarball","description":"This guide explains how to build the pkg-fe-react-goblin-system project, generate a tarball from the library build, and install it locally. This process is ideal for testing package changes before publishing a new version.","sidebar":"docs"},"providers":{"id":"providers","title":"Providers Module Documentation","description":"The providers module is responsible for setting up essential contexts and theming across the application. It includes components for global styling using Chakra UI and for managing authentication state through React Context and Redux. This documentation outlines the module\u2019s structure, explains the key components, and provides examples of how to integrate and use them.","sidebar":"docs"},"services":{"id":"services","title":"Services Module Documentation","description":"The services module is responsible for managing API communication, error handling, and providing type definitions for API responses across the application. It supports both real API calls and mock responses, making it ideal for both development and production environments.","sidebar":"docs"},"store/auth":{"id":"store/auth","title":"auth","description":"Below is the updated auth.md that explains the authentication module\'s features, usage examples, and updated import paths based on your current project structure.","sidebar":"docs"},"store/overview":{"id":"store/overview","title":"Store Module Overview","description":"The store module is a central component of the pkg-fe-react-goblin-system that provides robust state management using Redux Toolkit. Designed with modularity and scalability in mind, it handles user authentication, shared state, and asynchronous operations through well-defined slices and thunks.","sidebar":"docs"}}}}')}}]);