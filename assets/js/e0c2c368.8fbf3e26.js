"use strict";(self.webpackChunkreact_goblin_system_docs=self.webpackChunkreact_goblin_system_docs||[]).push([[827],{3023:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var t=s(3696);const r={},i=t.createContext(r);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:n},e.children)}},4927:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"store/auth","title":"auth","description":"Below is the updated auth.md that explains the authentication module\'s features, usage examples, and updated import paths based on your current project structure.","source":"@site/docs/store/auth.md","sourceDirName":"store","slug":"/store/auth","permalink":"/pkg-fe-react-goblin-system/docs/store/auth","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Overview \ud83d\udcd6","permalink":"/pkg-fe-react-goblin-system/docs/store/overview"},"next":{"title":"HOCs \ud83d\udd27","permalink":"/pkg-fe-react-goblin-system/docs/hocs"}}');var r=s(2540),i=s(3023);const o={},a=void 0,c={},l=[{value:"Overview",id:"overview",level:2},{value:"File Structure",id:"file-structure",level:2},{value:"Usage Instructions",id:"usage-instructions",level:2},{value:"Integrating the Auth Module",id:"integrating-the-auth-module",level:3},{value:"Dispatching Asynchronous Actions",id:"dispatching-asynchronous-actions",level:3},{value:"Clearing Error States",id:"clearing-error-states",level:3},{value:"Token Persistence",id:"token-persistence",level:3},{value:"Example: User Registration",id:"example-user-registration",level:2},{value:"Conclusion",id:"conclusion",level:2}];function d(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["Below is the updated ",(0,r.jsx)(n.code,{children:"auth.md"})," that explains the authentication module's features, usage examples, and updated import paths based on your current project structure."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h1,{id:"authentication-module-documentation",children:"Authentication Module Documentation"}),"\n",(0,r.jsxs)(n.p,{children:["This section of the ",(0,r.jsx)(n.strong,{children:"store"})," module handles user authentication processes\u2014including registration, login, and token refresh. It leverages Redux Toolkit for state management and asynchronous operations to provide a robust solution for managing authentication state in your application."]}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"The authentication module is designed to manage user authentication state through a collection of slices, thunks, and reducers. Its key functionalities include:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"User Registration"}),":",(0,r.jsx)(n.br,{}),"\n","Sends registration data (including a FormData object and an application ID) to the API and handles responses."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"User Login"}),":",(0,r.jsx)(n.br,{}),"\n","Authenticates users by sending login credentials, then stores the received tokens."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Token Refresh"}),":",(0,r.jsx)(n.br,{}),"\n","Refreshes authentication tokens when needed to maintain user sessions."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"State Management"}),":",(0,r.jsx)(n.br,{}),"\n","Manages UI states (e.g., loading, success, error) and persists tokens in local storage, ensuring a seamless user experience."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"file-structure",children:"File Structure"}),"\n",(0,r.jsx)(n.p,{children:"The main files within the authentication module are as follows:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"shared.ts"})}),(0,r.jsx)(n.br,{}),"\n","Defines the ",(0,r.jsx)(n.code,{children:"STATUS"})," enum with values ",(0,r.jsx)(n.code,{children:"IDLE"}),", ",(0,r.jsx)(n.code,{children:"LOADING"}),", ",(0,r.jsx)(n.code,{children:"SUCCESS"}),", and ",(0,r.jsx)(n.code,{children:"FAILED"})," to standardize state indicators."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"auth/asyncThunks.ts"})}),(0,r.jsx)(n.br,{}),"\n","Implements asynchronous actions using Redux Toolkit\u2019s ",(0,r.jsx)(n.code,{children:"createAsyncThunk"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"doRegister"})}),": Handles registration by sending form data and an application ID."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"doLogin"})}),": Authenticates users with login credentials."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"doRefresh"})}),": Refreshes authentication tokens."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Each thunk captures errors via ",(0,r.jsx)(n.code,{children:"rejectWithValue"}),", ensuring consistent error handling."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"auth/extraReducers.ts"})}),(0,r.jsx)(n.br,{}),"\n","Manages state transitions for the asynchronous actions. It updates the state during pending, fulfilled, and rejected phases, and also handles token persistence in ",(0,r.jsx)(n.code,{children:"localStorage"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"auth/index.ts"})}),(0,r.jsx)(n.br,{}),"\n","Combines reducers and extra reducers into a single slice. It exports:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"authSlice"})}),": The combined reducer."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"authActions"})}),": Synchronous actions (e.g., clearing error states)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"authAsyncActions"})}),": The asynchronous thunks for registration, login, and token refresh."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"auth/initialState.ts"})}),(0,r.jsx)(n.br,{}),"\n","Defines the initial state of the authentication module by retrieving tokens from ",(0,r.jsx)(n.code,{children:"localStorage"})," and initializing the login and registration statuses."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"auth/reducers.ts"})}),(0,r.jsx)(n.br,{}),"\n","Provides synchronous reducers to clear error states, allowing the UI to reset error messages."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"auth/types.ts"})}),(0,r.jsx)(n.br,{}),"\n","Contains TypeScript type definitions for the authentication state and API responses, ensuring type safety throughout the module."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"usage-instructions",children:"Usage Instructions"}),"\n",(0,r.jsx)(n.h3,{id:"integrating-the-auth-module",children:"Integrating the Auth Module"}),"\n",(0,r.jsxs)(n.p,{children:["To integrate the authentication module into your Redux store, import the ",(0,r.jsx)(n.code,{children:"authSlice"})," reducer from the package and include it in your store configuration:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { configureStore } from '@reduxjs/toolkit';\r\nimport { authSlice } from 'react-goblin-system/store/auth';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: authSlice,\r\n    // Include other reducers as needed...\r\n  },\r\n});\r\n\r\nexport default store;\n"})}),"\n",(0,r.jsx)(n.h3,{id:"dispatching-asynchronous-actions",children:"Dispatching Asynchronous Actions"}),"\n",(0,r.jsx)(n.p,{children:"Trigger authentication operations by dispatching the provided asynchronous actions. For example, to dispatch a login action:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { authAsyncActions } from 'react-goblin-system/store/auth';\r\n\r\n// Assume formData is already prepared (e.g., instance of FormData)\r\nstore.dispatch(authAsyncActions.doLogin(formData))\r\n  .then(response => {\r\n    // Handle successful login, e.g., navigate to dashboard\r\n  })\r\n  .catch(error => {\r\n    // Handle errors, such as displaying error messages\r\n  });\n"})}),"\n",(0,r.jsx)(n.h3,{id:"clearing-error-states",children:"Clearing Error States"}),"\n",(0,r.jsx)(n.p,{children:"After handling errors, clear the error state by dispatching the appropriate synchronous action:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { authActions } from 'react-goblin-system/store/auth';\r\n\r\n// Example: Clear login errors\r\nstore.dispatch(authActions.clearErrorsLogin());\n"})}),"\n",(0,r.jsx)(n.h3,{id:"token-persistence",children:"Token Persistence"}),"\n",(0,r.jsxs)(n.p,{children:["On successful login, registration, or token refresh, the module automatically stores the tokens in ",(0,r.jsx)(n.code,{children:"localStorage"}),". When the module initializes, it retrieves these tokens, ensuring that the user's session persists across browser reloads."]}),"\n",(0,r.jsx)(n.h2,{id:"example-user-registration",children:"Example: User Registration"}),"\n",(0,r.jsx)(n.p,{children:"Here\u2019s an example of how to dispatch a registration action:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { authAsyncActions } from 'react-goblin-system/store/auth';\r\n\r\n// Prepare the payload with form data and application ID\r\nconst payload = {\r\n  formData: new FormData(), // Populate formData with registration fields\r\n  appId: 'your-app-id'\r\n};\r\n\r\nstore.dispatch(authAsyncActions.doRegister(payload))\r\n  .then(response => {\r\n    console.log('Registration successful:', response);\r\n  })\r\n  .catch(error => {\r\n    console.error('Registration error:', error);\r\n  });\n"})}),"\n",(0,r.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,r.jsxs)(n.p,{children:["The authentication module streamlines user authentication processes within the ",(0,r.jsx)(n.strong,{children:"store"})," by combining Redux Toolkit\u2019s state management and asynchronous capabilities. By integrating this module, you can manage user sessions effectively and provide a seamless authentication experience in your application."]}),"\n",(0,r.jsx)(n.p,{children:"For further details or advanced usage, refer to the in-depth documentation of individual files and functions provided in the module."})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);