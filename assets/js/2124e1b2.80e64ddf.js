"use strict";(self.webpackChunkreact_goblin_system_docs=self.webpackChunkreact_goblin_system_docs||[]).push([[8],{3023:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>o});var r=i(3696);const l={},t=r.createContext(l);function s(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),r.createElement(t.Provider,{value:n},e.children)}},7299:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"providers/goblin-provider","title":"GoblinProvider","description":"The GoblinProvider is the main provider component for the Goblin System library. It automatically applies theme, global styles, and modern fonts to your application.","source":"@site/docs/providers/goblin-provider.md","sourceDirName":"providers","slug":"/providers/goblin-provider","permalink":"/pkg-fe-react-goblin-system/docs/providers/goblin-provider","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"docs","previous":{"title":"Transformer Page","permalink":"/pkg-fe-react-goblin-system/docs/pages/transformer"},"next":{"title":"Auth Provider","permalink":"/pkg-fe-react-goblin-system/docs/providers/auth-provider"}}');var l=i(2540),t=i(3023);const s={sidebar_position:1},o="GoblinProvider",d={},c=[{value:"Overview",id:"overview",level:2},{value:"Installation",id:"installation",level:2},{value:"Basic Usage",id:"basic-usage",level:2},{value:"API Reference",id:"api-reference",level:2},{value:"Properties",id:"properties",level:3},{value:"Examples",id:"examples",level:2},{value:"With System Theme Preference",id:"with-system-theme-preference",level:3},{value:"Without Global Styles",id:"without-global-styles",level:3},{value:"Custom Theme Configuration",id:"custom-theme-configuration",level:3},{value:"Implementation Details",id:"implementation-details",level:2},{value:"Related Components",id:"related-components",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"goblinprovider",children:"GoblinProvider"})}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"GoblinProvider"})," is the main provider component for the Goblin System library. It automatically applies theme, global styles, and modern fonts to your application."]}),"\n",(0,l.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,l.jsx)(n.p,{children:"The GoblinProvider simplifies the setup process for Goblin System by combining three key functionalities:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Theme application"})," - Applies light or dark theme based on configuration"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Global styles"})," - Sets up base styling for consistent appearance"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Font loading"})," - Loads and applies modern typography"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,l.jsx)(n.p,{children:"The GoblinProvider is included in the main package:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"npm install pkg-fe-react-goblin-system\n"})}),"\n",(0,l.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,l.jsx)(n.p,{children:"Wrap your application with the GoblinProvider:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-jsx",children:"import React from 'react';\nimport { GoblinProvider } from 'pkg-fe-react-goblin-system';\n\nfunction App() {\n  return (\n    <GoblinProvider>\n      {/* Your application code */}\n    </GoblinProvider>\n  );\n}\n\nexport default App;\n"})}),"\n",(0,l.jsx)(n.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,l.jsx)(n.h3,{id:"properties",children:"Properties"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Prop"}),(0,l.jsx)(n.th,{children:"Type"}),(0,l.jsx)(n.th,{children:"Default"}),(0,l.jsx)(n.th,{children:"Description"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"children"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"ReactNode"})}),(0,l.jsx)(n.td,{children:"Required"}),(0,l.jsx)(n.td,{children:"Child components that will have access to the provider"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"initialTheme"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"'light' | 'dark'"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"'light'"})}),(0,l.jsx)(n.td,{children:"Initial theme to use"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"useSystemPreference"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"boolean"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"false"})}),(0,l.jsx)(n.td,{children:"When true, uses system color scheme preference"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"disableGlobalStyles"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"boolean"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"false"})}),(0,l.jsx)(n.td,{children:"When true, disables global styles"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"disableGlobalFonts"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"boolean"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"false"})}),(0,l.jsx)(n.td,{children:"When true, disables global fonts"})]})]})]}),"\n",(0,l.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,l.jsx)(n.h3,{id:"with-system-theme-preference",children:"With System Theme Preference"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-jsx",children:"import React from 'react';\nimport { GoblinProvider } from 'pkg-fe-react-goblin-system';\n\nfunction App() {\n  return (\n    <GoblinProvider \n      initialTheme=\"light\"\n      useSystemPreference={true}\n    >\n      {/* Your application code */}\n    </GoblinProvider>\n  );\n}\n"})}),"\n",(0,l.jsx)(n.h3,{id:"without-global-styles",children:"Without Global Styles"}),"\n",(0,l.jsx)(n.p,{children:"If you want to use only the theme without applying global styles:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-jsx",children:"import React from 'react';\nimport { GoblinProvider } from 'pkg-fe-react-goblin-system';\n\nfunction App() {\n  return (\n    <GoblinProvider disableGlobalStyles={true}>\n      {/* Your application code */}\n    </GoblinProvider>\n  );\n}\n"})}),"\n",(0,l.jsx)(n.h3,{id:"custom-theme-configuration",children:"Custom Theme Configuration"}),"\n",(0,l.jsx)(n.p,{children:"For more advanced theming, you can use the GoblinProvider with a custom theme:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-jsx",children:"import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { GoblinProvider } from 'pkg-fe-react-goblin-system';\nimport { lightTheme } from 'pkg-fe-react-goblin-system/theme/theme';\n\n// Create your custom theme by extending the light theme\nconst customTheme = {\n  ...lightTheme,\n  colors: {\n    ...lightTheme.colors,\n    primary: {\n      ...lightTheme.colors.primary,\n      main: '#3498db', // Custom primary color\n    },\n  },\n};\n\nfunction App() {\n  return (\n    <ThemeProvider theme={customTheme}>\n      <GoblinProvider disableGlobalStyles={false}>\n        {/* Your application code */}\n      </GoblinProvider>\n    </ThemeProvider>\n  );\n}\n"})}),"\n",(0,l.jsx)(n.h2,{id:"implementation-details",children:"Implementation Details"}),"\n",(0,l.jsx)(n.p,{children:"The GoblinProvider internally uses:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"styled-components"})," ThemeProvider for theme management"]}),"\n",(0,l.jsx)(n.li,{children:"Dynamic theme switching based on system preferences (if enabled)"}),"\n",(0,l.jsx)(n.li,{children:"Global style application for consistent base styling"}),"\n",(0,l.jsx)(n.li,{children:"Modern font loading with fallbacks"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"related-components",children:"Related Components"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"ThemeProvider"})," - The underlying theme provider"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"GlobalStyles"})," - Global CSS styles"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Typography"})," - Typography and font management"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}}}]);