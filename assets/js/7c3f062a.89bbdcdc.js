"use strict";(self.webpackChunkreact_goblin_system_docs=self.webpackChunkreact_goblin_system_docs||[]).push([[539],{3023:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>m});var o=t(3696);const s={},r=o.createContext(s);function i(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function m(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:n},e.children)}},3671:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>m,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"theming/index","title":"Theme Customization","description":"Goblin System offers a powerful and flexible theming system that allows you to easily customize the appearance of all components.","source":"@site/docs/theming/index.md","sourceDirName":"theming","slug":"/theming/","permalink":"/pkg-fe-react-goblin-system/docs/theming/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"docs","previous":{"title":"Theme System","permalink":"/pkg-fe-react-goblin-system/docs/theme/theme-system"}}');var s=t(2540),r=t(3023);const i={sidebar_position:4},m="Theme Customization",a={},c=[{value:"Theming Core Concepts",id:"theming-core-concepts",level:2},{value:"Theme Provider",id:"theme-provider",level:2},{value:"Using the Default Theme",id:"using-the-default-theme",level:2},{value:"Theme Customization",id:"theme-customization-1",level:2},{value:"Custom Complete Theme",id:"custom-complete-theme",level:3},{value:"Extending the Default Theme",id:"extending-the-default-theme",level:3},{value:"Complete Theme Structure",id:"complete-theme-structure",level:2},{value:"Component-Specific Customization",id:"component-specific-customization",level:2},{value:"Using Theme Values in Your Components",id:"using-theme-values-in-your-components",level:2},{value:"Predefined Themes",id:"predefined-themes",level:2},{value:"Dynamic Dark Mode",id:"dynamic-dark-mode",level:2},{value:"Theming Best Practices",id:"theming-best-practices",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"theme-customization",children:"Theme Customization"})}),"\n",(0,s.jsx)(n.p,{children:"Goblin System offers a powerful and flexible theming system that allows you to easily customize the appearance of all components."}),"\n",(0,s.jsx)(n.h2,{id:"theming-core-concepts",children:"Theming Core Concepts"}),"\n",(0,s.jsx)(n.p,{children:"The Goblin System theming system is based on:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Theme Provider"}),": A context provider component that wraps your application"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Theme Object"}),": A JavaScript object that defines all theme values"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Styled Components"}),": The underlying library that manages component styles"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"theme-provider",children:"Theme Provider"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"ThemeProvider"})," must wrap your application to ensure that all components have access to the theme:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"import { ThemeProvider } from 'pkg-fe-react-goblin-system';\nimport App from './App';\n\nconst Root = () => (\n  <ThemeProvider>\n    <App />\n  </ThemeProvider>\n);\n\nexport default Root;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"using-the-default-theme",children:"Using the Default Theme"}),"\n",(0,s.jsx)(n.p,{children:"By default, Goblin System uses a modern and professional theme that suits most applications. You don't need to configure anything to use this theme."}),"\n",(0,s.jsx)(n.h2,{id:"theme-customization-1",children:"Theme Customization"}),"\n",(0,s.jsx)(n.h3,{id:"custom-complete-theme",children:"Custom Complete Theme"}),"\n",(0,s.jsxs)(n.p,{children:["You can provide a custom theme to the ",(0,s.jsx)(n.code,{children:"ThemeProvider"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"import { ThemeProvider, createTheme } from 'pkg-fe-react-goblin-system';\n\n// Create a custom theme\nconst customTheme = createTheme({\n  colors: {\n    primary: '#1E88E5',\n    secondary: '#6C757D',\n    success: '#43A047',\n    error: '#E53935',\n    warning: '#FFB300',\n    info: '#039BE5',\n    bgDefault: '#F8F9FA',\n    bgElevated: '#FFFFFF',\n    textPrimary: '#212121',\n    textSecondary: '#757575',\n    border: '#DFE3E8',\n  },\n  // Other customizations...\n});\n\nconst App = () => (\n  <ThemeProvider theme={customTheme}>\n    <YourApplication />\n  </ThemeProvider>\n);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"extending-the-default-theme",children:"Extending the Default Theme"}),"\n",(0,s.jsx)(n.p,{children:"You can extend the default theme by modifying only specific parts:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"import { ThemeProvider, defaultTheme } from 'pkg-fe-react-goblin-system';\n\n// Extend the default theme\nconst customTheme = {\n  ...defaultTheme,\n  colors: {\n    ...defaultTheme.colors,\n    primary: '#FF5722',\n    secondary: '#9C27B0',\n  },\n};\n\nconst App = () => (\n  <ThemeProvider theme={customTheme}>\n    <YourApplication />\n  </ThemeProvider>\n);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"complete-theme-structure",children:"Complete Theme Structure"}),"\n",(0,s.jsx)(n.p,{children:"The Goblin System theme is organized into logical sections:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"const themeStructure = {\n  // Color palette\n  colors: {\n    primary: '#1976D2',\n    secondary: '#6C757D',\n    success: '#4CAF50',\n    error: '#F44336',\n    warning: '#FFC107',\n    info: '#03A9F4',\n    bgDefault: '#F5F5F5',\n    bgElevated: '#FFFFFF',\n    textPrimary: '#212121',\n    textSecondary: '#757575',\n    border: '#E0E0E0',\n    borderLight: '#F0F0F0',\n    // ... other colors\n  },\n  \n  // Typography\n  typography: {\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    fontSizes: {\n      xs: '0.75rem',\n      sm: '0.875rem',\n      md: '1rem',\n      lg: '1.25rem',\n      xl: '1.5rem',\n      xxl: '2rem',\n    },\n    fontWeights: {\n      light: 300,\n      regular: 400,\n      medium: 500,\n      bold: 700,\n    },\n    lineHeights: {\n      xs: 1.1,\n      sm: 1.25,\n      md: 1.5,\n      lg: 1.75,\n      xl: 2,\n    },\n    variants: {\n      h1: { /* specific styles for h1 */ },\n      h2: { /* specific styles for h2 */ },\n      // ... other variants\n    },\n  },\n  \n  // Spacing\n  spacing: {\n    xs: '0.25rem',\n    sm: '0.5rem',\n    md: '1rem',\n    lg: '1.5rem',\n    xl: '2rem',\n    xxl: '3rem',\n  },\n  \n  // Breakpoints\n  breakpoints: {\n    xs: '0px',\n    sm: '576px',\n    md: '768px',\n    lg: '992px',\n    xl: '1200px',\n  },\n  \n  // Borders and radius\n  radii: {\n    xs: '2px',\n    sm: '4px',\n    md: '8px',\n    lg: '12px',\n    xl: '16px',\n    round: '50%',\n  },\n  \n  // Shadows\n  shadows: {\n    sm: '0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24)',\n    md: '0 3px 6px rgba(0,0,0,0.15), 0 2px 4px rgba(0,0,0,0.12)',\n    lg: '0 10px 20px rgba(0,0,0,0.15), 0 3px 6px rgba(0,0,0,0.10)',\n    xl: '0 15px 25px rgba(0,0,0,0.15), 0 5px 10px rgba(0,0,0,0.05)',\n  },\n  \n  // Transitions\n  transitions: {\n    duration: {\n      short: '150ms',\n      medium: '300ms',\n      long: '500ms',\n    },\n    timing: {\n      ease: 'cubic-bezier(0.25, 0.1, 0.25, 1)',\n      easeIn: 'cubic-bezier(0.42, 0, 1, 1)',\n      easeOut: 'cubic-bezier(0, 0, 0.58, 1)',\n      easeInOut: 'cubic-bezier(0.42, 0, 0.58, 1)',\n    },\n  },\n  \n  // Grid\n  grid: {\n    columns: 12,\n    gutters: {\n      xs: '0.5rem',\n      sm: '0.75rem',\n      md: '1rem',\n      lg: '1.5rem',\n      xl: '2rem',\n    },\n  },\n  \n  // Component-specific styles\n  components: {\n    Button: {\n      // Button-specific customizations\n    },\n    Modal: {\n      // Modal-specific customizations\n    },\n    // ... other components\n  },\n};\n"})}),"\n",(0,s.jsx)(n.h2,{id:"component-specific-customization",children:"Component-Specific Customization"}),"\n",(0,s.jsxs)(n.p,{children:["Each component can be customized individually through the theme's ",(0,s.jsx)(n.code,{children:"components"})," property:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"const customTheme = createTheme({\n  // General theme...\n  \n  components: {\n    Button: {\n      borderRadius: '8px',\n      fontWeight: 500,\n      variants: {\n        primary: {\n          backgroundColor: '#1E88E5',\n          color: 'white',\n          '&:hover': {\n            backgroundColor: '#1976D2',\n          },\n        },\n        secondary: {\n          // ... customizations for secondary variant\n        },\n        // ... other variants\n      },\n      sizes: {\n        small: {\n          padding: '4px 8px',\n          fontSize: '0.85rem',\n        },\n        medium: {\n          // ... customizations for medium size\n        },\n        large: {\n          // ... customizations for large size\n        },\n      },\n    },\n    \n    Modal: {\n      borderRadius: '12px',\n      backgroundColor: '#FFFFFF',\n      boxShadow: '0 20px 25px rgba(0,0,0,0.15), 0 10px 10px rgba(0,0,0,0.05)',\n      // ... other customizations\n    },\n    \n    // ... other components\n  },\n});\n"})}),"\n",(0,s.jsx)(n.h2,{id:"using-theme-values-in-your-components",children:"Using Theme Values in Your Components"}),"\n",(0,s.jsxs)(n.p,{children:["You can access theme values in your custom components using the ",(0,s.jsx)(n.code,{children:"useTheme"})," hook:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"import React from 'react';\nimport { useTheme } from 'pkg-fe-react-goblin-system';\n\nconst MyCustomComponent = () => {\n  const theme = useTheme();\n  \n  return (\n    <div style={{ \n      backgroundColor: theme.colors.bgElevated,\n      padding: theme.spacing.md,\n      borderRadius: theme.radii.md,\n      boxShadow: theme.shadows.md,\n      color: theme.colors.textPrimary,\n    }}>\n      <h3 style={{ \n        fontSize: theme.typography.fontSizes.lg,\n        fontWeight: theme.typography.fontWeights.medium,\n      }}>\n        My Custom Component\n      </h3>\n      <p>This component uses Goblin System theme values</p>\n    </div>\n  );\n};\n\nexport default MyCustomComponent;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"predefined-themes",children:"Predefined Themes"}),"\n",(0,s.jsx)(n.p,{children:"Goblin System includes several predefined themes that you can use as starting points:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"import { \n  ThemeProvider, \n  lightTheme,\n  darkTheme,\n  contrastTheme \n} from 'pkg-fe-react-goblin-system';\n\n// Light theme (default)\nconst App1 = () => (\n  <ThemeProvider theme={lightTheme}>\n    <YourApplication />\n  </ThemeProvider>\n);\n\n// Dark theme\nconst App2 = () => (\n  <ThemeProvider theme={darkTheme}>\n    <YourApplication />\n  </ThemeProvider>\n);\n\n// High contrast theme (for improved accessibility)\nconst App3 = () => (\n  <ThemeProvider theme={contrastTheme}>\n    <YourApplication />\n  </ThemeProvider>\n);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"dynamic-dark-mode",children:"Dynamic Dark Mode"}),"\n",(0,s.jsx)(n.p,{children:"You can implement a toggle for dark mode using a custom hook:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"import React, { useState, useMemo } from 'react';\nimport { ThemeProvider, lightTheme, darkTheme } from 'pkg-fe-react-goblin-system';\n\nconst ThemeToggleContext = React.createContext({\n  isDarkMode: false,\n  toggleTheme: () => {},\n});\n\nexport const useThemeToggle = () => React.useContext(ThemeToggleContext);\n\nexport const ThemeToggleProvider = ({ children }) => {\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  \n  const toggleTheme = () => {\n    setIsDarkMode(prev => !prev);\n  };\n  \n  const theme = useMemo(() => {\n    return isDarkMode ? darkTheme : lightTheme;\n  }, [isDarkMode]);\n  \n  const contextValue = useMemo(() => {\n    return { isDarkMode, toggleTheme };\n  }, [isDarkMode]);\n  \n  return (\n    <ThemeToggleContext.Provider value={contextValue}>\n      <ThemeProvider theme={theme}>\n        {children}\n      </ThemeProvider>\n    </ThemeToggleContext.Provider>\n  );\n};\n\n// Usage\nconst App = () => (\n  <ThemeToggleProvider>\n    <RootComponent />\n  </ThemeToggleProvider>\n);\n\nconst ThemeToggleButton = () => {\n  const { isDarkMode, toggleTheme } = useThemeToggle();\n  \n  return (\n    <button onClick={toggleTheme}>\n      {isDarkMode ? 'Switch to Light Mode' : 'Switch to Dark Mode'}\n    </button>\n  );\n};\n"})}),"\n",(0,s.jsx)(n.h2,{id:"theming-best-practices",children:"Theming Best Practices"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Consistency"}),": Use theme values consistently throughout the application"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Accessibility"}),": Ensure that the colors you choose meet accessibility requirements (adequate contrast)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Modularity"}),": Define common values in the theme to promote reuse and maintainability"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Flexibility"}),": Design your theme to support different use cases and preferences"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Semantics"}),": Use semantic naming for color variables (e.g., ",(0,s.jsx)(n.code,{children:"primary"}),", ",(0,s.jsx)(n.code,{children:"success"}),") rather than visual names (e.g., ",(0,s.jsx)(n.code,{children:"blue"}),", ",(0,s.jsx)(n.code,{children:"green"}),")"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);