{"version":3,"file":"stat.mjs","sources":["../../../../src/components/Factory/Chakra/stat.tsx"],"sourcesContent":["import {\r\n  Badge,\r\n  type BadgeProps,\r\n  Stat as ChakraStat,\r\n  FormatNumber,\r\n  IconButton,\r\n} from \"@chakra-ui/react\"\r\nimport { ToggleTip } from \"./toggle-tip\"\r\nimport { forwardRef } from \"react\"\r\nimport { HiOutlineInformationCircle } from \"react-icons/hi\"\r\n\r\ninterface StatLabelProps extends ChakraStat.LabelProps {\r\n  info?: React.ReactNode\r\n}\r\n\r\nexport const StatLabel = forwardRef<HTMLDivElement, StatLabelProps>(\r\n  function StatLabel(props, ref) {\r\n    const { info, children, ...rest } = props\r\n    return (\r\n      <ChakraStat.Label {...rest} ref={ref}>\r\n        {children}\r\n        {info && (\r\n          <ToggleTip content={info}>\r\n            <IconButton variant=\"ghost\" aria-label=\"info\" size=\"2xs\">\r\n              <HiOutlineInformationCircle />\r\n            </IconButton>\r\n          </ToggleTip>\r\n        )}\r\n      </ChakraStat.Label>\r\n    )\r\n  },\r\n)\r\n\r\ninterface StatValueTextProps extends ChakraStat.ValueTextProps {\r\n  value?: number\r\n  formatOptions?: Intl.NumberFormatOptions\r\n}\r\n\r\nexport const StatValueText = forwardRef<HTMLDivElement, StatValueTextProps>(\r\n  function StatValueText(props, ref) {\r\n    const { value, formatOptions, children, ...rest } = props\r\n    return (\r\n      <ChakraStat.ValueText {...rest} ref={ref}>\r\n        {children ||\r\n          (value != null && <FormatNumber value={value} {...formatOptions} />)}\r\n      </ChakraStat.ValueText>\r\n    )\r\n  },\r\n)\r\n\r\nexport const StatUpTrend = forwardRef<HTMLDivElement, BadgeProps>(\r\n  function StatUpTrend(props, ref) {\r\n    return (\r\n      <Badge colorPalette=\"green\" gap=\"0\" {...props} ref={ref}>\r\n        <ChakraStat.UpIndicator />\r\n        {props.children}\r\n      </Badge>\r\n    )\r\n  },\r\n)\r\n\r\nexport const StatDownTrend = forwardRef<HTMLDivElement, BadgeProps>(\r\n  function StatDownTrend(props, ref) {\r\n    return (\r\n      <Badge colorPalette=\"red\" gap=\"0\" {...props} ref={ref}>\r\n        <ChakraStat.DownIndicator />\r\n        {props.children}\r\n      </Badge>\r\n    )\r\n  },\r\n)\r\n\r\nexport const StatRoot = ChakraStat.Root\r\nexport const StatHelpText = ChakraStat.HelpText\r\nexport const StatValueUnit = ChakraStat.ValueUnit\r\n"],"names":["StatLabel","ChakraStat","jsx","StatValueText","StatUpTrend","jsxs","StatDownTrend"],"mappings":";;;;AAeO,MAAM,YAAY;AAAA,EACvB,SAASA,WAAU,OAAO,KAAK;AAC7B,UAAM,EAAE,MAAM,UAAU,GAAG,KAAS,IAAA;AACpC,kDACGC,KAAW,OAAX,EAAkB,GAAG,MAAM,KACzB,UAAA;AAAA,MAAA;AAAA,MACA,QACEC,kCAAAA,IAAA,WAAA,EAAU,SAAS,MAClB,gDAAC,YAAW,EAAA,SAAQ,SAAQ,cAAW,QAAO,MAAK,OACjD,UAACA,kCAAAA,IAAA,4BAAA,EAA2B,GAC9B,EACF,CAAA;AAAA,IAAA,GAEJ;AAAA,EAAA;AAGN;AAOO,MAAM,gBAAgB;AAAA,EAC3B,SAASC,eAAc,OAAO,KAAK;AACjC,UAAM,EAAE,OAAO,eAAe,UAAU,GAAG,KAAS,IAAA;AACpD,WACGD,kCAAAA,IAAAD,KAAW,WAAX,EAAsB,GAAG,MAAM,KAC7B,UACE,YAAA,SAAS,QAASC,kCAAAA,IAAA,cAAA,EAAa,OAAe,GAAG,cAAe,CAAA,GACrE;AAAA,EAAA;AAGN;AAEO,MAAM,cAAc;AAAA,EACzB,SAASE,aAAY,OAAO,KAAK;AAE7B,WAAAC,uCAAC,SAAM,cAAa,SAAQ,KAAI,KAAK,GAAG,OAAO,KAC7C,UAAA;AAAA,MAACH,sCAAAD,KAAW,aAAX,EAAuB;AAAA,MACvB,MAAM;AAAA,IAAA,GACT;AAAA,EAAA;AAGN;AAEO,MAAM,gBAAgB;AAAA,EAC3B,SAASK,eAAc,OAAO,KAAK;AAE/B,WAAAD,uCAAC,SAAM,cAAa,OAAM,KAAI,KAAK,GAAG,OAAO,KAC3C,UAAA;AAAA,MAACH,sCAAAD,KAAW,eAAX,EAAyB;AAAA,MACzB,MAAM;AAAA,IAAA,GACT;AAAA,EAAA;AAGN;AAEO,MAAM,WAAWA,KAAW;AAC5B,MAAM,eAAeA,KAAW;AAChC,MAAM,gBAAgBA,KAAW;"}