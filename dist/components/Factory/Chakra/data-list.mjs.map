{"version":3,"file":"data-list.mjs","sources":["../../../../src/components/Factory/Chakra/data-list.tsx"],"sourcesContent":["import { DataList as ChakraDataList, IconButton } from \"@chakra-ui/react\"\r\nimport { ToggleTip } from \"./toggle-tip\"\r\nimport { forwardRef } from \"react\"\r\nimport { HiOutlineInformationCircle } from \"react-icons/hi2\"\r\n\r\nexport const DataListRoot = ChakraDataList.Root\r\n\r\ninterface ItemProps extends ChakraDataList.ItemProps {\r\n  label: React.ReactNode\r\n  value: React.ReactNode\r\n  info?: React.ReactNode\r\n  grow?: boolean\r\n}\r\n\r\nexport const DataListItem = forwardRef<HTMLDivElement, ItemProps>(\r\n  function DataListItem(props, ref) {\r\n    const { label, info, value, children, grow, ...rest } = props\r\n    return (\r\n      <ChakraDataList.Item ref={ref} {...rest}>\r\n        <ChakraDataList.ItemLabel flex={grow ? \"1\" : undefined}>\r\n          {label}\r\n          {info && (\r\n            <ToggleTip content={info}>\r\n              <IconButton variant=\"ghost\" aria-label=\"info\" size=\"2xs\">\r\n                <HiOutlineInformationCircle />\r\n              </IconButton>\r\n            </ToggleTip>\r\n          )}\r\n        </ChakraDataList.ItemLabel>\r\n        <ChakraDataList.ItemValue flex={grow ? \"1\" : undefined}>\r\n          {value}\r\n        </ChakraDataList.ItemValue>\r\n        {children}\r\n      </ChakraDataList.Item>\r\n    )\r\n  },\r\n)\r\n"],"names":["ChakraDataList","DataListItem","jsxs","jsx"],"mappings":";;;;;AAKO,MAAM,eAAeA,SAAe;AASpC,MAAM,eAAe;AAAA,EAC1B,SAASC,cAAa,OAAO,KAAK;AAC1B,UAAA,EAAE,OAAO,MAAM,OAAO,UAAU,MAAM,GAAG,SAAS;AACxD,kDACGD,SAAe,MAAf,EAAoB,KAAW,GAAG,MACjC,UAAA;AAAA,MAAAE,uCAACF,SAAe,WAAf,EAAyB,MAAM,OAAO,MAAM,QAC1C,UAAA;AAAA,QAAA;AAAA,QACA,QACEG,kCAAAA,IAAA,WAAA,EAAU,SAAS,MAClB,gDAAC,YAAW,EAAA,SAAQ,SAAQ,cAAW,QAAO,MAAK,OACjD,UAACA,kCAAAA,IAAA,4BAAA,EAA2B,GAC9B,EACF,CAAA;AAAA,MAAA,GAEJ;AAAA,MACAA,sCAACH,SAAe,WAAf,EAAyB,MAAM,OAAO,MAAM,QAC1C,UACH,OAAA;AAAA,MACC;AAAA,IAAA,GACH;AAAA,EAAA;AAGN;"}