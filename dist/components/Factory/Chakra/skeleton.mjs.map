{"version":3,"file":"skeleton.mjs","sources":["../../../../src/components/Factory/Chakra/skeleton.tsx"],"sourcesContent":["import type {\r\n  SkeletonProps as ChakraSkeletonProps,\r\n  CircleProps,\r\n} from \"@chakra-ui/react\"\r\nimport { Skeleton as ChakraSkeleton, Circle, Stack } from \"@chakra-ui/react\"\r\nimport { forwardRef } from \"react\"\r\n\r\nexport interface SkeletonCircleProps extends ChakraSkeletonProps {\r\n  size?: CircleProps[\"size\"]\r\n}\r\n\r\nexport const SkeletonCircle = (props: SkeletonCircleProps) => {\r\n  const { size, ...rest } = props\r\n  return (\r\n    <Circle size={size} asChild>\r\n      <ChakraSkeleton {...rest} />\r\n    </Circle>\r\n  )\r\n}\r\n\r\nexport interface SkeletonTextProps extends ChakraSkeletonProps {\r\n  noOfLines?: number\r\n}\r\n\r\nexport const SkeletonText = forwardRef<HTMLDivElement, SkeletonTextProps>(\r\n  function SkeletonText(props, ref) {\r\n    const { noOfLines = 3, gap, ...rest } = props\r\n    return (\r\n      <Stack gap={gap} width=\"full\" ref={ref}>\r\n        {Array.from({ length: noOfLines }).map((_, index) => (\r\n          <ChakraSkeleton\r\n            height=\"4\"\r\n            key={index}\r\n            {...props}\r\n            _last={{ maxW: \"80%\" }}\r\n            {...rest}\r\n          />\r\n        ))}\r\n      </Stack>\r\n    )\r\n  },\r\n)\r\n\r\nexport const Skeleton = ChakraSkeleton\r\n"],"names":["jsx","ChakraSkeleton","SkeletonText"],"mappings":";;;AAWa,MAAA,iBAAiB,CAAC,UAA+B;AAC5D,QAAM,EAAE,MAAM,GAAG,KAAA,IAAS;AAExB,SAAAA,kCAAA,IAAC,UAAO,MAAY,SAAO,MACzB,UAACA,kCAAAA,IAAAC,YAAA,EAAgB,GAAG,KAAA,CAAM,EAC5B,CAAA;AAEJ;AAMO,MAAM,eAAe;AAAA,EAC1B,SAASC,cAAa,OAAO,KAAK;AAChC,UAAM,EAAE,YAAY,GAAG,KAAK,GAAG,KAAS,IAAA;AACxC,iDACG,OAAM,EAAA,KAAU,OAAM,QAAO,KAC3B,UAAM,MAAA,KAAK,EAAE,QAAQ,UAAW,CAAA,EAAE,IAAI,CAAC,GAAG,UACzCF,kCAAA;AAAA,MAACC;AAAAA,MAAA;AAAA,QACC,QAAO;AAAA,QAEN,GAAG;AAAA,QACJ,OAAO,EAAE,MAAM,MAAM;AAAA,QACpB,GAAG;AAAA,MAAA;AAAA,MAHC;AAAA,IAKR,CAAA,GACH;AAAA,EAAA;AAGN;AAEO,MAAM,WAAWA;"}