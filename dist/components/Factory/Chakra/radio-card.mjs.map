{"version":3,"file":"radio-card.mjs","sources":["../../../../src/components/Factory/Chakra/radio-card.tsx"],"sourcesContent":["import { RadioCard } from \"@chakra-ui/react\"\r\nimport { Fragment, forwardRef } from \"react\"\r\n\r\ninterface RadioCardItemProps extends RadioCard.ItemProps {\r\n  icon?: React.ReactElement\r\n  label?: React.ReactNode\r\n  description?: React.ReactNode\r\n  addon?: React.ReactNode\r\n  indicator?: React.ReactNode | null\r\n  indicatorPlacement?: \"start\" | \"end\" | \"inside\"\r\n  inputProps?: React.InputHTMLAttributes<HTMLInputElement>\r\n}\r\n\r\nexport const RadioCardItem = forwardRef<HTMLInputElement, RadioCardItemProps>(\r\n  function RadioCardItem(props, ref) {\r\n    const {\r\n      inputProps,\r\n      label,\r\n      description,\r\n      addon,\r\n      icon,\r\n      indicator = <RadioCard.ItemIndicator />,\r\n      indicatorPlacement = \"end\",\r\n      ...rest\r\n    } = props\r\n\r\n    const hasContent = label || description || icon\r\n    const ContentWrapper = indicator ? RadioCard.ItemContent : Fragment\r\n\r\n    return (\r\n      <RadioCard.Item {...rest}>\r\n        <RadioCard.ItemHiddenInput ref={ref} {...inputProps} />\r\n        <RadioCard.ItemControl>\r\n          {indicatorPlacement === \"start\" && indicator}\r\n          {hasContent && (\r\n            <ContentWrapper>\r\n              {icon}\r\n              {label && <RadioCard.ItemText>{label}</RadioCard.ItemText>}\r\n              {description && (\r\n                <RadioCard.ItemDescription>\r\n                  {description}\r\n                </RadioCard.ItemDescription>\r\n              )}\r\n              {indicatorPlacement === \"inside\" && indicator}\r\n            </ContentWrapper>\r\n          )}\r\n          {indicatorPlacement === \"end\" && indicator}\r\n        </RadioCard.ItemControl>\r\n        {addon && <RadioCard.ItemAddon>{addon}</RadioCard.ItemAddon>}\r\n      </RadioCard.Item>\r\n    )\r\n  },\r\n)\r\n\r\nexport const RadioCardRoot = RadioCard.Root\r\nexport const RadioCardLabel = RadioCard.Label\r\nexport const RadioCardItemIndicator = RadioCard.ItemIndicator\r\n"],"names":["RadioCardItem","forwardRef","props","ref","inputProps","label","description","addon","icon","indicator","jsx","RadioCard","indicatorPlacement","rest","hasContent","ContentWrapper","Fragment","jsxs","RadioCardRoot","RadioCardLabel","RadioCardItemIndicator"],"mappings":";;;AAaO,MAAMA,IAAgBC;AAAA,EAC3B,SAAuBC,GAAOC,GAAK;AAC3B,UAAA;AAAA,MACJ,YAAAC;AAAA,MACA,OAAAC;AAAA,MACA,aAAAC;AAAA,MACA,OAAAC;AAAA,MACA,MAAAC;AAAA,MACA,WAAAC,IAAYC,gBAAAA,EAAA,IAACC,EAAU,eAAV,CAAA,CAAwB;AAAA,MACrC,oBAAAC,IAAqB;AAAA,MACrB,GAAGC;AAAA,IAAA,IACDX,GAEEY,IAAaT,KAASC,KAAeE,GACrCO,IAAiBN,IAAYE,EAAU,cAAcK;AAE3D,WACGC,gBAAAA,EAAAA,KAAAN,EAAU,MAAV,EAAgB,GAAGE,GAClB,UAAA;AAAA,MAAAH,gBAAAA,EAAA,IAACC,EAAU,iBAAV,EAA0B,KAAAR,GAAW,GAAGC,EAAY,CAAA;AAAA,MACrDa,gBAAAA,EAAAA,KAACN,EAAU,aAAV,EACE,UAAA;AAAA,QAAAC,MAAuB,WAAWH;AAAA,QAClCK,4BACEC,GACE,EAAA,UAAA;AAAA,UAAAP;AAAA,UACAH,KAASK,gBAAAA,EAAA,IAACC,EAAU,UAAV,EAAoB,UAAMN,GAAA;AAAA,UACpCC,KACCI,gBAAAA,EAAA,IAACC,EAAU,iBAAV,EACE,UACHL,GAAA;AAAA,UAEDM,MAAuB,YAAYH;AAAA,QAAA,GACtC;AAAA,QAEDG,MAAuB,SAASH;AAAA,MAAA,GACnC;AAAA,MACCF,KAASG,gBAAAA,EAAA,IAACC,EAAU,WAAV,EAAqB,UAAMJ,EAAA,CAAA;AAAA,IAAA,GACxC;AAAA,EAAA;AAGN,GAEaW,IAAgBP,EAAU,MAC1BQ,IAAiBR,EAAU,OAC3BS,IAAyBT,EAAU;"}