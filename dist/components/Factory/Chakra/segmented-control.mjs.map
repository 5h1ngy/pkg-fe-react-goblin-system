{"version":3,"file":"segmented-control.mjs","sources":["../../../../src/components/Factory/Chakra/segmented-control.tsx"],"sourcesContent":["\r\n\r\nimport { For, SegmentGroup } from \"@chakra-ui/react\"\r\nimport { forwardRef, useMemo } from \"react\"\r\n\r\ninterface Item {\r\n  value: string\r\n  label: React.ReactNode\r\n  disabled?: boolean\r\n}\r\n\r\nexport interface SegmentedControlProps extends SegmentGroup.RootProps {\r\n  items: Array<string | Item>\r\n}\r\n\r\nfunction normalize(items: Array<string | Item>): Item[] {\r\n  return items.map((item) => {\r\n    if (typeof item === \"string\") return { value: item, label: item }\r\n    return item\r\n  })\r\n}\r\n\r\nexport const SegmentedControl = forwardRef<HTMLDivElement, SegmentedControlProps>(function SegmentedControl(props, ref) {\r\n  const { items, ...rest } = props\r\n  const data = useMemo(() => normalize(items), [items])\r\n\r\n  return (\r\n    <SegmentGroup.Root ref={ref} {...rest}>\r\n      <SegmentGroup.Indicator />\r\n      <For each={data}>\r\n        {(item) => (\r\n          <SegmentGroup.Item\r\n            key={item.value}\r\n            value={item.value}\r\n            disabled={item.disabled}\r\n          >\r\n            <SegmentGroup.ItemText>{item.label}</SegmentGroup.ItemText>\r\n            <SegmentGroup.ItemHiddenInput />\r\n          </SegmentGroup.Item>\r\n        )}\r\n      </For>\r\n    </SegmentGroup.Root>\r\n  )\r\n})\r\n"],"names":["SegmentedControl","jsx","jsxs"],"mappings":";;;AAeA,SAAS,UAAU,OAAqC;AAC/C,SAAA,MAAM,IAAI,CAAC,SAAS;AACrB,QAAA,OAAO,SAAS,SAAU,QAAO,EAAE,OAAO,MAAM,OAAO,KAAK;AACzD,WAAA;AAAA,EAAA,CACR;AACH;AAEO,MAAM,mBAAmB,WAAkD,SAASA,kBAAiB,OAAO,KAAK;AACtH,QAAM,EAAE,OAAO,GAAG,KAAA,IAAS;AACrB,QAAA,OAAO,QAAQ,MAAM,UAAU,KAAK,GAAG,CAAC,KAAK,CAAC;AAEpD,gDACG,aAAa,MAAb,EAAkB,KAAW,GAAG,MAC/B,UAAA;AAAA,IAACC,sCAAA,aAAa,WAAb,EAAuB;AAAA,IACvBA,kCAAA,IAAA,KAAA,EAAI,MAAM,MACR,WAAC,SACAC,kCAAA;AAAA,MAAC,aAAa;AAAA,MAAb;AAAA,QAEC,OAAO,KAAK;AAAA,QACZ,UAAU,KAAK;AAAA,QAEf,UAAA;AAAA,UAAAD,kCAAA,IAAC,aAAa,UAAb,EAAuB,UAAA,KAAK,OAAM;AAAA,UACnCA,sCAAC,aAAa,iBAAb,CAA6B,CAAA;AAAA,QAAA;AAAA,MAAA;AAAA,MALzB,KAAK;AAAA,IAAA,EAQhB,CAAA;AAAA,EAAA,GACF;AAEJ,CAAC;"}