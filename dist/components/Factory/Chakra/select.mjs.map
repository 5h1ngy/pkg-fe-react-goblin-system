{"version":3,"file":"select.mjs","sources":["../../../../src/components/Factory/Chakra/select.tsx"],"sourcesContent":["\r\n\r\nimport type { CollectionItem } from \"@chakra-ui/react\"\r\nimport { Select as ChakraSelect, Portal } from \"@chakra-ui/react\"\r\nimport { CloseButton } from \"./close-button\"\r\nimport { forwardRef } from \"react\"\r\n\r\ninterface SelectTriggerProps extends ChakraSelect.ControlProps {\r\n  clearable?: boolean\r\n}\r\n\r\nexport const SelectTrigger = forwardRef<HTMLButtonElement, SelectTriggerProps>(\r\n  function SelectTrigger(props, ref) {\r\n    const { children, clearable, ...rest } = props\r\n    return (\r\n      <ChakraSelect.Control {...rest}>\r\n        <ChakraSelect.Trigger ref={ref}>{children}</ChakraSelect.Trigger>\r\n        <ChakraSelect.IndicatorGroup>\r\n          {clearable && <SelectClearTrigger />}\r\n          <ChakraSelect.Indicator />\r\n        </ChakraSelect.IndicatorGroup>\r\n      </ChakraSelect.Control>\r\n    )\r\n  },\r\n)\r\n\r\nconst SelectClearTrigger = forwardRef<\r\n  HTMLButtonElement,\r\n  ChakraSelect.ClearTriggerProps\r\n>(function SelectClearTrigger(props, ref) {\r\n  return (\r\n    <ChakraSelect.ClearTrigger asChild {...props} ref={ref}>\r\n      <CloseButton\r\n        size=\"xs\"\r\n        variant=\"plain\"\r\n        focusVisibleRing=\"inside\"\r\n        focusRingWidth=\"2px\"\r\n        pointerEvents=\"auto\"\r\n      />\r\n    </ChakraSelect.ClearTrigger>\r\n  )\r\n})\r\n\r\ninterface SelectContentProps extends ChakraSelect.ContentProps {\r\n  portalled?: boolean\r\n  portalRef?: React.RefObject<HTMLElement>\r\n}\r\n\r\nexport const SelectContent = forwardRef<HTMLDivElement, SelectContentProps>(\r\n  function SelectContent(props, ref) {\r\n    const { portalled = true, portalRef, ...rest } = props\r\n    return (\r\n      <Portal disabled={!portalled} container={portalRef}>\r\n        <ChakraSelect.Positioner>\r\n          <ChakraSelect.Content {...rest} ref={ref} />\r\n        </ChakraSelect.Positioner>\r\n      </Portal>\r\n    )\r\n  },\r\n)\r\n\r\nexport const SelectItem = forwardRef<HTMLDivElement, ChakraSelect.ItemProps>(\r\n  function SelectItem(props, ref) {\r\n    const { item, children, ...rest } = props\r\n    return (\r\n      <ChakraSelect.Item key={item.value} item={item} {...rest} ref={ref}>\r\n        {children}\r\n        <ChakraSelect.ItemIndicator />\r\n      </ChakraSelect.Item>\r\n    )\r\n  },\r\n)\r\n\r\ninterface SelectValueTextProps\r\n  extends Omit<ChakraSelect.ValueTextProps, \"children\"> {\r\n  children?(items: CollectionItem[]): React.ReactNode\r\n}\r\n\r\nexport const SelectValueText = forwardRef<\r\n  HTMLSpanElement,\r\n  SelectValueTextProps\r\n>(function SelectValueText(props, ref) {\r\n  const { children, ...rest } = props\r\n  return (\r\n    <ChakraSelect.ValueText {...rest} ref={ref}>\r\n      <ChakraSelect.Context>\r\n        {(select) => {\r\n          const items = select.selectedItems\r\n          if (items.length === 0) return props.placeholder\r\n          if (children) return children(items)\r\n          if (items.length === 1)\r\n            return select.collection.stringifyItem(items[0])\r\n          return `${items.length} selected`\r\n        }}\r\n      </ChakraSelect.Context>\r\n    </ChakraSelect.ValueText>\r\n  )\r\n})\r\n\r\nexport const SelectRoot = forwardRef<HTMLDivElement, ChakraSelect.RootProps>(\r\n  function SelectRoot(props, ref) {\r\n    return (\r\n      <ChakraSelect.Root\r\n        {...props}\r\n        ref={ref}\r\n        positioning={{ sameWidth: true, ...props.positioning }}\r\n      >\r\n        {props.asChild ? (\r\n          props.children\r\n        ) : (\r\n          <>\r\n            <ChakraSelect.HiddenSelect />\r\n            {props.children}\r\n          </>\r\n        )}\r\n      </ChakraSelect.Root>\r\n    )\r\n  },\r\n) as ChakraSelect.RootComponent\r\n\r\ninterface SelectItemGroupProps extends ChakraSelect.ItemGroupProps {\r\n  label: React.ReactNode\r\n}\r\n\r\nexport const SelectItemGroup = forwardRef<HTMLDivElement, SelectItemGroupProps>(\r\n  function SelectItemGroup(props, ref) {\r\n    const { children, label, ...rest } = props\r\n    return (\r\n      <ChakraSelect.ItemGroup {...rest} ref={ref}>\r\n        <ChakraSelect.ItemGroupLabel>{label}</ChakraSelect.ItemGroupLabel>\r\n        {children}\r\n      </ChakraSelect.ItemGroup>\r\n    )\r\n  },\r\n)\r\n\r\nexport const SelectLabel = ChakraSelect.Label\r\nexport const SelectItemText = ChakraSelect.ItemText\r\n"],"names":["SelectTrigger","forwardRef","props","ref","children","clearable","rest","jsxs","ChakraSelect","jsx","SelectClearTrigger","CloseButton","SelectContent","portalled","portalRef","Portal","SelectItem","item","SelectValueText","select","items","SelectRoot","Fragment","SelectItemGroup","label","SelectLabel","SelectItemText"],"mappings":"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"}