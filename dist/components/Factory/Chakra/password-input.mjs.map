{"version":3,"file":"password-input.mjs","sources":["../../../../src/components/Factory/Chakra/password-input.tsx"],"sourcesContent":["\r\n\r\nimport type {\r\n  ButtonProps,\r\n  GroupProps,\r\n  InputProps,\r\n  StackProps,\r\n} from \"@chakra-ui/react\"\r\nimport {\r\n  Box,\r\n  HStack,\r\n  IconButton,\r\n  Input,\r\n  Stack,\r\n  mergeRefs,\r\n  useControllableState,\r\n} from \"@chakra-ui/react\"\r\nimport { forwardRef, useRef } from \"react\"\r\nimport { LuEye, LuEyeOff } from \"react-icons/lu\"\r\nimport { InputGroup } from \"./input-group\"\r\n\r\nexport interface PasswordVisibilityProps {\r\n  defaultVisible?: boolean\r\n  visible?: boolean\r\n  onVisibleChange?: (visible: boolean) => void\r\n  visibilityIcon?: { on: React.ReactNode; off: React.ReactNode }\r\n}\r\n\r\nexport interface PasswordInputProps\r\n  extends InputProps,\r\n    PasswordVisibilityProps {\r\n  rootProps?: GroupProps\r\n}\r\n\r\nexport const PasswordInput = forwardRef<HTMLInputElement, PasswordInputProps>(\r\n  function PasswordInput(props, ref) {\r\n    const {\r\n      rootProps,\r\n      defaultVisible,\r\n      visible: visibleProp,\r\n      onVisibleChange,\r\n      visibilityIcon = { on: <LuEye />, off: <LuEyeOff /> },\r\n      ...rest\r\n    } = props\r\n\r\n    const [visible, setVisible] = useControllableState({\r\n      value: visibleProp,\r\n      defaultValue: defaultVisible || false,\r\n      onChange: onVisibleChange,\r\n    })\r\n\r\n    const inputRef = useRef<HTMLInputElement>(null)\r\n\r\n    return (\r\n      <InputGroup\r\n        width=\"full\"\r\n        endElement={\r\n          <VisibilityTrigger\r\n            disabled={rest.disabled}\r\n            onPointerDown={(e) => {\r\n              if (rest.disabled) return\r\n              if (e.button !== 0) return\r\n              e.preventDefault()\r\n              setVisible(!visible)\r\n            }}\r\n          >\r\n            {visible ? visibilityIcon.off : visibilityIcon.on}\r\n          </VisibilityTrigger>\r\n        }\r\n        {...rootProps}\r\n      >\r\n        <Input\r\n          {...rest}\r\n          ref={mergeRefs(ref, inputRef)}\r\n          type={visible ? \"text\" : \"password\"}\r\n        />\r\n      </InputGroup>\r\n    )\r\n  },\r\n)\r\n\r\nconst VisibilityTrigger = forwardRef<HTMLButtonElement, ButtonProps>(\r\n  function VisibilityTrigger(props, ref) {\r\n    return (\r\n      <IconButton\r\n        tabIndex={-1}\r\n        ref={ref}\r\n        me=\"-2\"\r\n        aspectRatio=\"square\"\r\n        size=\"sm\"\r\n        variant=\"ghost\"\r\n        height=\"calc(100% - {spacing.2})\"\r\n        aria-label=\"Toggle password visibility\"\r\n        {...props}\r\n      />\r\n    )\r\n  },\r\n)\r\n\r\ninterface PasswordStrengthMeterProps extends StackProps {\r\n  max?: number\r\n  value: number\r\n}\r\n\r\nexport const PasswordStrengthMeter = forwardRef<\r\n  HTMLDivElement,\r\n  PasswordStrengthMeterProps\r\n>(function PasswordStrengthMeter(props, ref) {\r\n  const { max = 4, value, ...rest } = props\r\n\r\n  const percent = (value / max) * 100\r\n  const { label, colorPalette } = getColorPalette(percent)\r\n\r\n  return (\r\n    <Stack align=\"flex-end\" gap=\"1\" ref={ref} {...rest}>\r\n      <HStack width=\"full\" ref={ref} {...rest}>\r\n        {Array.from({ length: max }).map((_, index) => (\r\n          <Box\r\n            key={index}\r\n            height=\"1\"\r\n            flex=\"1\"\r\n            rounded=\"sm\"\r\n            data-selected={index < value ? \"\" : undefined}\r\n            layerStyle=\"fill.subtle\"\r\n            colorPalette=\"gray\"\r\n            _selected={{\r\n              colorPalette,\r\n              layerStyle: \"fill.solid\",\r\n            }}\r\n          />\r\n        ))}\r\n      </HStack>\r\n      {label && <HStack textStyle=\"xs\">{label}</HStack>}\r\n    </Stack>\r\n  )\r\n})\r\n\r\nfunction getColorPalette(percent: number) {\r\n  switch (true) {\r\n    case percent < 33:\r\n      return { label: \"Low\", colorPalette: \"red\" }\r\n    case percent < 66:\r\n      return { label: \"Medium\", colorPalette: \"orange\" }\r\n    default:\r\n      return { label: \"High\", colorPalette: \"green\" }\r\n  }\r\n}\r\n"],"names":["PasswordInput","forwardRef","props","ref","rootProps","defaultVisible","visibleProp","onVisibleChange","visibilityIcon","jsx","LuEye","LuEyeOff","rest","visible","setVisible","useControllableState","inputRef","useRef","InputGroup","VisibilityTrigger","e","Input","mergeRefs","IconButton","PasswordStrengthMeter","max","value","percent","label","colorPalette","getColorPalette","jsxs","Stack","HStack","_","index","Box"],"mappings":"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"}