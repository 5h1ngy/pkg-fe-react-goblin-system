{"version":3,"file":"file-button.mjs","sources":["../../../../src/components/Factory/Chakra/file-button.tsx"],"sourcesContent":["\r\n\r\nimport type { ButtonProps, RecipeProps } from \"@chakra-ui/react\"\r\nimport {\r\n  Button,\r\n  FileUpload as ChakraFileUpload,\r\n  Icon,\r\n  IconButton,\r\n  Span,\r\n  Text,\r\n  useFileUploadContext,\r\n  useRecipe,\r\n} from \"@chakra-ui/react\"\r\nimport { forwardRef } from \"react\"\r\nimport { LuFile, LuUpload, LuX } from \"react-icons/lu\"\r\n\r\nexport interface FileUploadRootProps extends ChakraFileUpload.RootProps {\r\n  inputProps?: React.InputHTMLAttributes<HTMLInputElement>\r\n}\r\n\r\nexport const FileUploadRoot = forwardRef<HTMLInputElement, FileUploadRootProps>(\r\n  function FileUploadRoot(props, ref) {\r\n    const { children, inputProps, ...rest } = props\r\n    return (\r\n      <ChakraFileUpload.Root {...rest}>\r\n        <ChakraFileUpload.HiddenInput ref={ref} {...inputProps} />\r\n        {children}\r\n      </ChakraFileUpload.Root>\r\n    )\r\n  },\r\n)\r\n\r\nexport interface FileUploadDropzoneProps\r\n  extends ChakraFileUpload.DropzoneProps {\r\n  label: React.ReactNode\r\n  description?: React.ReactNode\r\n}\r\n\r\nexport const FileUploadDropzone = forwardRef<\r\n  HTMLInputElement,\r\n  FileUploadDropzoneProps\r\n>(function FileUploadDropzone(props, ref) {\r\n  const { children, label, description, ...rest } = props\r\n  return (\r\n    <ChakraFileUpload.Dropzone ref={ref} {...rest}>\r\n      <Icon fontSize=\"xl\" color=\"fg.muted\">\r\n        <LuUpload />\r\n      </Icon>\r\n      <ChakraFileUpload.DropzoneContent>\r\n        <div>{label}</div>\r\n        {description && <Text color=\"fg.muted\">{description}</Text>}\r\n      </ChakraFileUpload.DropzoneContent>\r\n      {children}\r\n    </ChakraFileUpload.Dropzone>\r\n  )\r\n})\r\n\r\ninterface VisibilityProps {\r\n  showSize?: boolean\r\n  clearable?: boolean\r\n}\r\n\r\ninterface FileUploadItemProps extends VisibilityProps {\r\n  file: File\r\n}\r\n\r\nconst FileUploadItem = (props: FileUploadItemProps) => {\r\n  const { file, showSize, clearable } = props\r\n  return (\r\n    <ChakraFileUpload.Item file={file}>\r\n      <ChakraFileUpload.ItemPreview asChild>\r\n        <Icon fontSize=\"lg\" color=\"fg.muted\">\r\n          <LuFile />\r\n        </Icon>\r\n      </ChakraFileUpload.ItemPreview>\r\n\r\n      {showSize ? (\r\n        <ChakraFileUpload.ItemContent>\r\n          <ChakraFileUpload.ItemName />\r\n          <ChakraFileUpload.ItemSizeText />\r\n        </ChakraFileUpload.ItemContent>\r\n      ) : (\r\n        <ChakraFileUpload.ItemName flex=\"1\" />\r\n      )}\r\n\r\n      {clearable && (\r\n        <ChakraFileUpload.ItemDeleteTrigger asChild>\r\n          <IconButton variant=\"ghost\" color=\"fg.muted\" size=\"xs\">\r\n            <LuX />\r\n          </IconButton>\r\n        </ChakraFileUpload.ItemDeleteTrigger>\r\n      )}\r\n    </ChakraFileUpload.Item>\r\n  )\r\n}\r\n\r\ninterface FileUploadListProps\r\n  extends VisibilityProps,\r\n    ChakraFileUpload.ItemGroupProps {\r\n  files?: File[]\r\n}\r\n\r\nexport const FileUploadList = forwardRef<HTMLUListElement, FileUploadListProps>(\r\n  function FileUploadList(props, ref) {\r\n    const { showSize, clearable, files, ...rest } = props\r\n\r\n    const fileUpload = useFileUploadContext()\r\n    const acceptedFiles = files ?? fileUpload.acceptedFiles\r\n\r\n    if (acceptedFiles.length === 0) return null\r\n\r\n    return (\r\n      <ChakraFileUpload.ItemGroup ref={ref} {...rest}>\r\n        {acceptedFiles.map((file) => (\r\n          <FileUploadItem\r\n            key={file.name}\r\n            file={file}\r\n            showSize={showSize}\r\n            clearable={clearable}\r\n          />\r\n        ))}\r\n      </ChakraFileUpload.ItemGroup>\r\n    )\r\n  },\r\n)\r\n\r\ntype Assign<T, U> = Omit<T, keyof U> & U\r\n\r\ninterface FileInputProps extends Assign<ButtonProps, RecipeProps<\"input\">> {\r\n  placeholder?: React.ReactNode\r\n}\r\n\r\nexport const FileInput = forwardRef<HTMLButtonElement, FileInputProps>(\r\n  function FileInput(props, ref) {\r\n    const inputRecipe = useRecipe({ key: \"input\" })\r\n    const [recipeProps, restProps] = inputRecipe.splitVariantProps(props)\r\n    const { placeholder = \"Select file(s)\", ...rest } = restProps\r\n    return (\r\n      <ChakraFileUpload.Trigger asChild>\r\n        <Button\r\n          unstyled\r\n          py=\"0\"\r\n          ref={ref}\r\n          {...rest}\r\n          css={[inputRecipe(recipeProps), props.css]}\r\n        >\r\n          <ChakraFileUpload.Context>\r\n            {({ acceptedFiles }) => {\r\n              if (acceptedFiles.length === 1) {\r\n                return <span>{acceptedFiles[0].name}</span>\r\n              }\r\n              if (acceptedFiles.length > 1) {\r\n                return <span>{acceptedFiles.length} files</span>\r\n              }\r\n              return <Span color=\"fg.subtle\">{placeholder}</Span>\r\n            }}\r\n          </ChakraFileUpload.Context>\r\n        </Button>\r\n      </ChakraFileUpload.Trigger>\r\n    )\r\n  },\r\n)\r\n\r\nexport const FileUploadLabel = ChakraFileUpload.Label\r\nexport const FileUploadClearTrigger = ChakraFileUpload.ClearTrigger\r\nexport const FileUploadTrigger = ChakraFileUpload.Trigger\r\n"],"names":["FileUploadRoot","jsxs","ChakraFileUpload","jsx","FileUploadDropzone","FileUploadList","FileInput"],"mappings":"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"}