{"version":3,"file":"checkbox-card.mjs","sources":["../../../../src/components/Factory/Chakra/checkbox-card.tsx"],"sourcesContent":["import { CheckboxCard as ChakraCheckboxCard } from \"@chakra-ui/react\"\r\nimport { Fragment, forwardRef } from \"react\"\r\n\r\nexport interface CheckboxCardProps extends ChakraCheckboxCard.RootProps {\r\n  icon?: React.ReactElement\r\n  label?: React.ReactNode\r\n  description?: React.ReactNode\r\n  addon?: React.ReactNode\r\n  indicator?: React.ReactNode | null\r\n  indicatorPlacement?: \"start\" | \"end\" | \"inside\"\r\n  inputProps?: React.InputHTMLAttributes<HTMLInputElement>\r\n}\r\n\r\nexport const CheckboxCard = forwardRef<HTMLInputElement, CheckboxCardProps>(\r\n  function CheckboxCard(props, ref) {\r\n    const {\r\n      inputProps,\r\n      label,\r\n      description,\r\n      icon,\r\n      addon,\r\n      indicator = <ChakraCheckboxCard.Indicator />,\r\n      indicatorPlacement = \"end\",\r\n      ...rest\r\n    } = props\r\n\r\n    const hasContent = label || description || icon\r\n    const ContentWrapper = indicator ? ChakraCheckboxCard.Content : Fragment\r\n\r\n    return (\r\n      <ChakraCheckboxCard.Root {...rest}>\r\n        <ChakraCheckboxCard.HiddenInput ref={ref} {...inputProps} />\r\n        <ChakraCheckboxCard.Control>\r\n          {indicatorPlacement === \"start\" && indicator}\r\n          {hasContent && (\r\n            <ContentWrapper>\r\n              {icon}\r\n              {label && (\r\n                <ChakraCheckboxCard.Label>{label}</ChakraCheckboxCard.Label>\r\n              )}\r\n              {description && (\r\n                <ChakraCheckboxCard.Description>\r\n                  {description}\r\n                </ChakraCheckboxCard.Description>\r\n              )}\r\n              {indicatorPlacement === \"inside\" && indicator}\r\n            </ContentWrapper>\r\n          )}\r\n          {indicatorPlacement === \"end\" && indicator}\r\n        </ChakraCheckboxCard.Control>\r\n        {addon && <ChakraCheckboxCard.Addon>{addon}</ChakraCheckboxCard.Addon>}\r\n      </ChakraCheckboxCard.Root>\r\n    )\r\n  },\r\n)\r\n\r\nexport const CheckboxCardIndicator = ChakraCheckboxCard.Indicator\r\n"],"names":["CheckboxCard","forwardRef","props","ref","inputProps","label","description","icon","addon","indicator","jsx","ChakraCheckboxCard","indicatorPlacement","rest","hasContent","ContentWrapper","Fragment","jsxs","CheckboxCardIndicator"],"mappings":";;;AAaO,MAAMA,IAAeC;AAAA,EAC1B,SAAsBC,GAAOC,GAAK;AAC1B,UAAA;AAAA,MACJ,YAAAC;AAAA,MACA,OAAAC;AAAA,MACA,aAAAC;AAAA,MACA,MAAAC;AAAA,MACA,OAAAC;AAAA,MACA,WAAAC,IAAYC,gBAAAA,EAAA,IAACC,EAAmB,WAAnB,CAAA,CAA6B;AAAA,MAC1C,oBAAAC,IAAqB;AAAA,MACrB,GAAGC;AAAA,IAAA,IACDX,GAEEY,IAAaT,KAASC,KAAeC,GACrCQ,IAAiBN,IAAYE,EAAmB,UAAUK;AAEhE,WACGC,gBAAAA,EAAAA,KAAAN,EAAmB,MAAnB,EAAyB,GAAGE,GAC3B,UAAA;AAAA,MAAAH,gBAAAA,EAAA,IAACC,EAAmB,aAAnB,EAA+B,KAAAR,GAAW,GAAGC,EAAY,CAAA;AAAA,MAC1Da,gBAAAA,EAAAA,KAACN,EAAmB,SAAnB,EACE,UAAA;AAAA,QAAAC,MAAuB,WAAWH;AAAA,QAClCK,4BACEC,GACE,EAAA,UAAA;AAAA,UAAAR;AAAA,UACAF,KACCK,gBAAAA,EAAA,IAACC,EAAmB,OAAnB,EAA0B,UAAMN,GAAA;AAAA,UAElCC,KACCI,gBAAAA,EAAA,IAACC,EAAmB,aAAnB,EACE,UACHL,GAAA;AAAA,UAEDM,MAAuB,YAAYH;AAAA,QAAA,GACtC;AAAA,QAEDG,MAAuB,SAASH;AAAA,MAAA,GACnC;AAAA,MACCD,KAASE,gBAAAA,EAAA,IAACC,EAAmB,OAAnB,EAA0B,UAAMH,EAAA,CAAA;AAAA,IAAA,GAC7C;AAAA,EAAA;AAGN,GAEaU,IAAwBP,EAAmB;"}