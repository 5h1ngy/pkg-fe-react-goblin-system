{"version":3,"file":"handlers.mjs","sources":["../../src/services/handlers.ts"],"sourcesContent":["import { AxiosError } from \"axios\";\r\n\r\nexport async function errorHandler<Response, Error extends { status: string, message: string }>(\r\n    cb: () => Promise<Response>\r\n): Promise<Response> {\r\n    try {\r\n        return await cb()\r\n    } catch (error) {\r\n        const exeception = error as AxiosError<Error>;\r\n        if (exeception.response?.data) {\r\n            throw {\r\n                status: exeception.response.data.status,\r\n                message: exeception.response.data.message,\r\n            };\r\n        } else if (exeception.status === 500 && !exeception.response?.data) {\r\n            if (exeception.name === \"AxiosError\") {\r\n                throw {\r\n                    status: \"Errore\",\r\n                    message: \"Servizi non raggiungibili\",\r\n                }\r\n            } else {\r\n                throw {\r\n                    status: \"Errore\",\r\n                    message: \"Errore sconosciuto\",\r\n                }\r\n            }\r\n        } else {\r\n            throw {\r\n                status: exeception.status,\r\n                message: exeception.message,\r\n            }\r\n        }\r\n    }\r\n}"],"names":[],"mappings":"AAEA,eAAsB,aAClB,IACiB;AAFrB;AAGQ,MAAA;AACA,WAAO,MAAM,GAAG;AAAA,WACX,OAAO;AACZ,UAAM,aAAa;AACf,SAAA,gBAAW,aAAX,mBAAqB,MAAM;AACrB,YAAA;AAAA,QACF,QAAQ,WAAW,SAAS,KAAK;AAAA,QACjC,SAAS,WAAW,SAAS,KAAK;AAAA,MACtC;AAAA,IAAA,WACO,WAAW,WAAW,OAAO,GAAC,gBAAW,aAAX,mBAAqB,OAAM;AAC5D,UAAA,WAAW,SAAS,cAAc;AAC5B,cAAA;AAAA,UACF,QAAQ;AAAA,UACR,SAAS;AAAA,QACb;AAAA,MAAA,OACG;AACG,cAAA;AAAA,UACF,QAAQ;AAAA,UACR,SAAS;AAAA,QACb;AAAA,MAAA;AAAA,IACJ,OACG;AACG,YAAA;AAAA,QACF,QAAQ,WAAW;AAAA,QACnB,SAAS,WAAW;AAAA,MACxB;AAAA,IAAA;AAAA,EACJ;AAER;"}