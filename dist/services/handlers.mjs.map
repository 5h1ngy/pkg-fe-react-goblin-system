{"version":3,"file":"handlers.mjs","sources":["../../src/services/handlers.ts"],"sourcesContent":["import { AxiosError } from \"axios\";\r\n\r\nexport async function errorHandler<Response, Error extends { status: string, message: string }>(\r\n    cb: () => Promise<Response>\r\n): Promise<Response> {\r\n    try {\r\n        return await cb()\r\n    } catch (error) {\r\n        const exeception = error as AxiosError<Error>;\r\n        if (exeception.response?.data) {\r\n            throw {\r\n                status: exeception.response.data.status,\r\n                message: exeception.response.data.message,\r\n            };\r\n        } else if (exeception.status === 500 && !exeception.response?.data) {\r\n            if (exeception.name === \"AxiosError\") {\r\n                throw {\r\n                    status: \"Errore\",\r\n                    message: \"Servizi non raggiungibili\",\r\n                }\r\n            } else {\r\n                throw {\r\n                    status: \"Errore\",\r\n                    message: \"Errore sconosciuto\",\r\n                }\r\n            }\r\n        } else {\r\n            throw {\r\n                status: exeception.status,\r\n                message: exeception.message,\r\n            }\r\n        }\r\n    }\r\n}"],"names":["errorHandler","cb","_a","_b","error","exeception"],"mappings":"AAEA,eAAsBA,EAClBC,GACiB;AAFrB,MAAAC,GAAAC;AAGQ,MAAA;AACA,WAAO,MAAMF,EAAG;AAAA,WACXG,GAAO;AACZ,UAAMC,IAAaD;AACf,WAAAF,IAAAG,EAAW,aAAX,QAAAH,EAAqB,OACf;AAAA,MACF,QAAQG,EAAW,SAAS,KAAK;AAAA,MACjC,SAASA,EAAW,SAAS,KAAK;AAAA,IACtC,IACOA,EAAW,WAAW,OAAO,GAACF,IAAAE,EAAW,aAAX,QAAAF,EAAqB,QACtDE,EAAW,SAAS,eACd;AAAA,MACF,QAAQ;AAAA,MACR,SAAS;AAAA,IACb,IAEM;AAAA,MACF,QAAQ;AAAA,MACR,SAAS;AAAA,IACb,IAGE;AAAA,MACF,QAAQA,EAAW;AAAA,MACnB,SAASA,EAAW;AAAA,IACxB;AAAA,EACJ;AAER;"}